[
    {
        "guideline": {
            "guideline": "1.3.1",
            "success_criteria": "input element or button is missing an associated label, it contains an alt attribute, or its label is empty",
            "examples": [
                {
                    "problem": "<input type=\"file\" id=\"myfile\" name=\"myfile\">",
                    "solution": "<label for=\"myfile\">File</label><br>\n<input type=\"file\" id=\"myfile\" name=\"myfile\">"
                },
                {
                    "problem": "<button type=\"submit\">Submit</button>",
                    "solution": "<label for=\"submit\">Submit</label><br>\n<button type=\"submit\" id=\"submit\">Submit</button>"
                },
                {
                    "problem": "<input type=\"text\" id=\"name\" name=\"name\" alt=\"Name\">",
                    "solution": "<label for=\"name\">Name</label><br>\n<input type=\"text\" id=\"name\" name=\"name\">"
                },
                {
                    "problem": "<label for=\"email\"></label>\n<input type=\"text\" id=\"email\" name=\"email\">",
                    "solution": "<label for=\"email\">Email</label><br>\n<input type=\"text\" id=\"email\" name=\"email\">"
                }
            ]
        },
        "problem": {
            "guideline": "1.3.1",
            "line": 114,
            "problem": "<input type=\"text\" id=\"name\" name=\"name\" required><br>"
        },
        "closest_fix": {
            "offending_line": "<input type=\"text\" id=\"name\" name=\"name\" required><br>",
            "fixed_line": "<label for=\"name\">Name:</label><br><input type=\"text\" id=\"name\" name=\"name\" required><br>",
            "CoT": "Step 1: Identify all input elements and buttons in the form in the section of the code related to the contact form.\nStep 2: Check if each input element or button has an associated label using the 'for' attribute or by wrapping the input/button with a <label> element.\nStep 3: Verify if the labels have meaningful text that describes the purpose of the input element or button.\nStep 4: Ensure that the alt attribute in the img tag has a meaningful description of the image."
        }
    },
    {
        "guideline": {
            "guideline": "1.3.1",
            "success_criteria": "input element or button is missing an associated label, it contains an alt attribute, or its label is empty",
            "examples": [
                {
                    "problem": "<input type=\"file\" id=\"myfile\" name=\"myfile\">",
                    "solution": "<label for=\"myfile\">File</label><br>\n<input type=\"file\" id=\"myfile\" name=\"myfile\">"
                },
                {
                    "problem": "<button type=\"submit\">Submit</button>",
                    "solution": "<label for=\"submit\">Submit</label><br>\n<button type=\"submit\" id=\"submit\">Submit</button>"
                },
                {
                    "problem": "<input type=\"text\" id=\"name\" name=\"name\" alt=\"Name\">",
                    "solution": "<label for=\"name\">Name</label><br>\n<input type=\"text\" id=\"name\" name=\"name\">"
                },
                {
                    "problem": "<label for=\"email\"></label>\n<input type=\"text\" id=\"email\" name=\"email\">",
                    "solution": "<label for=\"email\">Email</label><br>\n<input type=\"text\" id=\"email\" name=\"email\">"
                }
            ]
        },
        "problem": {
            "guideline": "1.3.1",
            "line": 122,
            "problem": ""
        },
        "closest_fix": {
            "offending_line": "<button type=\"submit\" style=\"color: rgb(0, 0, 0); background-color: rgb(76, 175, 80);\"></button>",
            "fixed_line": "<button type=\"submit\" style=\"color: rgb(0, 0, 0); background-color: rgb(76, 175, 80);\">Submit</button>",
            "CoT": "Let's start by looking for input elements and buttons on the page. We will specifically check if they have associated labels or if their labels are empty. If the input elements or buttons have alt attributes, we will also flag that as an issue since alt attributes are typically used for images to provide alternate text for screen readers and should not be used for input elements or buttons. Let's review the code for any such issues."
        }
    },
    {
        "guideline": {
            "guideline": "3.3.2",
            "success_criteria": "input element has more than one associated label",
            "examples": [
                {
                    "problem": "<label for=\"name\">Name</label>\n<input type=\"text\" id=\"name\" name=\"name\">\n<label for=\"name\">First Name</label>",
                    "solution": "<label for=\"name\">Name</label>\n<input type=\"text\" id=\"name\" name=\"name\">"
                }
            ]
        },
        "problem": {
            "guideline": "3.3.2",
            "line": 116,
            "problem": "<label for=\"email\">Email:</label>"
        },
        "closest_fix": {
            "offending_line": "<label for=\"email\">Email:</label>",
            "fixed_line": "<label for=\"email\">Email:</label><br>",
            "CoT": "Sure! \n1. Look for all the `<input>` elements in the form.\n2. Check each `<input>` element for its associated `<label>` element.\n3. If an `<input>` element has more than one associated `<label>` element, then that is the identified problem according to the rule provided.\n4. Provide the solution to fix the issue once identified."
        }
    },
    {
        "guideline": {
            "guideline": "2.1.1",
            "success_criteria": "onmousedown event missing onkeydown event or script is not keyboard accessible",
            "examples": [
                {
                    "problem": "<button onclick=\"alert('Hello World!')\">Click me</button>",
                    "solution": "<button onclick=\"alert('Hello World!')\" onkeydown=\"alert('Hello World!')\">Click me</button>"
                },
                {
                    "problem": "<a href=\"#\" onclick=\"alert('Hello World!')\">Click me</a>",
                    "solution": "<a href=\"#\" onclick=\"alert('Hello World!')\" onkeydown=\"alert('Hello World!')\">Click me</a>"
                }
            ]
        },
        "problem": {
            "guideline": "2.1.1",
            "line": 109,
            "problem": "<h2 onmouseout=\"PauseVideo()\">Exercise Videos</h2>"
        },
        "closest_fix": {
            "offending_line": "<h2 onmouseout=\"PauseVideo()\">Exercise Videos</h2>",
            "fixed_line": "<h2 onmousedown=\"PauseVideo()\" onkeydown=\"if (event.key === 'Enter' || event.key === ' ') PauseVideo()\">Exercise Videos</h2>",
            "CoT": "To identify the accessibility issue related to the missing `onmousedown` event or keyboard accessibility, we need to focus on elements that require user interaction and determine if they can be activated using both mouse and keyboard.\n\n1. Look for interactive elements: Identify elements on the page that require user interaction, such as buttons, links, or form inputs.\n\n2. Check for event handling: Inspect the interactive elements to see if there are event handlers like `onmousedown` that are used for mouse interaction.\n\n3. Verify keyboard accessibility: Make sure that the interactive elements can also be activated using keyboard events like `onkeydown` or `onkeyup`. This means users should be able to focus on the element using the Tab key and activate it using the Enter key or Space key.\n\n4. Identify any missing keyboard event handling: If there are interactive elements without keyboard event handling, such as missing `onkeydown` events or scripts that are not keyboard accessible, then that would be the accessibility issue.\n\nBy following these steps, we can pinpoint the specific element or section of the webpage that lacks the necessary keyboard accessibility event handling. Let's take a closer look at the interactive elements and their event handling to identify any accessibility issues."
        }
    }
]