[
    {
        "guideline": {
            "guideline": "1.3.1",
            "success_criteria": "input element or button is missing an associated label, it contains an alt attribute, or its label is empty",
            "examples": [
                {
                    "problem": "<input type=\"file\" id=\"myfile\" name=\"myfile\">",
                    "solution": "<label for=\"myfile\">File</label><br>\n<input type=\"file\" id=\"myfile\" name=\"myfile\">"
                },
                {
                    "problem": "<button type=\"submit\">Submit</button>",
                    "solution": "<label for=\"submit\">Submit</label><br>\n<button type=\"submit\" id=\"submit\">Submit</button>"
                },
                {
                    "problem": "<input type=\"text\" id=\"name\" name=\"name\" alt=\"Name\">",
                    "solution": "<label for=\"name\">Name</label><br>\n<input type=\"text\" id=\"name\" name=\"name\">"
                },
                {
                    "problem": "<label for=\"email\"></label>\n<input type=\"text\" id=\"email\" name=\"email\">",
                    "solution": "<label for=\"email\">Email</label><br>\n<input type=\"text\" id=\"email\" name=\"email\">"
                }
            ]
        },
        "problem": {
            "guideline": "1.3.1",
            "line": 61,
            "problem": "<input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Your name\">"
        },
        "closest_fix": {
            "offending_line": "<input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Your name\">",
            "fixed_line": "<label for=\"name\">Name:</label><input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Your name\">",
            "CoT": "Step 1: Identify all input elements and buttons on the page.\n\nStep 2: Check each input element and button for the following:\n- If it is an input element, ensure that it has an associated label using the \"for\" attribute pointing to the input's id.\n- If it is a button, check if it has an accessible name (label) either directly as text inside the button element or through an associated label.\n\nStep 3: Verify that all labels are meaningful and describe the purpose of the input element or button.\n\nStep 4: Identify any input element or button that is missing an associated label, contains an empty label, or has an alt attribute instead of a meaningful label.\n\nStep 5: Provide the location and details of the specific input element or button that violates the accessibility rule."
        }
    },
    {
        "guideline": {
            "guideline": "2.1.1",
            "success_criteria": "onmousedown event missing onkeydown event or script is not keyboard accessible",
            "examples": [
                {
                    "problem": "<button onclick=\"alert('Hello World!')\">Click me</button>",
                    "solution": "<button onclick=\"alert('Hello World!')\" onkeydown=\"alert('Hello World!')\">Click me</button>"
                },
                {
                    "problem": "<a href=\"#\" onclick=\"alert('Hello World!')\">Click me</a>",
                    "solution": "<a href=\"#\" onclick=\"alert('Hello World!')\" onkeydown=\"alert('Hello World!')\">Click me</a>"
                }
            ]
        },
        "problem": {
            "guideline": "2.1.1",
            "line": 35,
            "problem": "<button onmousedown=\"addToCart('ComfortFitTShirt')\">Add to Cart</button>"
        },
        "closest_fix": {
            "offending_line": "<button onmousedown=\"addToCart('ComfortFitTShirt')\">Add to Cart</button>",
            "fixed_line": "<button onmousedown=\"addToCart('ComfortFitTShirt')\" onkeydown=\"addToCart('ComfortFitTShirt')\">Add to Cart</button>",
            "CoT": "To address this issue, I will need to carefully examine the HTML code provided. I will specifically look for any elements that have interactive functionality triggered by a mouse event (such as `onmousedown`), but lack an equivalent keyboard event (such as `onkeydown`) or alternative keyboard-accessible method to perform the same action. This ensures that users who rely on keyboard navigation or assistive technologies can interact with the website effectively.\n\nI will start by scanning the HTML elements for any instances of `onmousedown` attributes or any elements that seem to require mouse interaction. Then, I will determine if there are corresponding keyboard-accessible alternatives or if an `onkeydown` event should be added."
        }
    },
    {
        "guideline": {
            "guideline": "4.1.1",
            "success_criteria": "element does not have complete start and end tags or id attribute is not unique",
            "examples": [
                {
                    "problem": "<li><a href=\"#\">Services</li>",
                    "solution": "<li><a href=\"#\">Services</a></li>"
                },
                {
                    "problem": "<div id=\"header\">",
                    "solution": "<div id=\"header\"></div>"
                }
            ]
        },
        "problem": {
            "guideline": "4.1.1",
            "line": 51,
            "problem": "<section id=\"video-container\" onmouseout=\"PauseVideo()\">"
        },
        "closest_fix": {
            "offending_line": "<section id=\"video-container\" onmouseout=\"PauseVideo()\">",
            "fixed_line": "<section id=\"video-container\"><div id=\"video-container\"></div>",
            "CoT": "First, let's identify where in the HTML document to look for the issue. The problem states that an element does not have a complete start and end tag or the id attribute is not unique.\n\nNext, let's go through the HTML code snippet provided and check each element for potential issues related to incomplete start and end tags or duplicated id attributes.\n\n1. **Navigation Bar (nav)**: \n   - All `<li>` elements have complete start and end tags.\n  \n2. **Header Section (header)**:\n   - The `<h1>` and `<p>` elements have complete start and end tags.\n\n3. **Featured Products Section (section id=\"featured-products\")**:\n   - The product cards have complete start and end tags for `<div>`, `<img>`, `<h2>`, `<p>`, and `<button>`.\n  \n4. **Video Section (section id=\"video-container\")**:\n   - The section has an incomplete start and end tag. There seems to be an issue here.\n\n5. **Contact Section (section id=\"contact\")**:\n   - All form elements have complete start and end tags. However, there is a duplicated `label for=\"email\"` which is not valid.\n\n6. **Footer Section (footer)**:\n   - The `<p>` element has a complete start and end tag.\n\nLet's focus on the **Video Section (section id=\"video-container\")** as it has an issue with an incomplete start and end tag. We need to fix this for accessibility and code correctness."
        }
    },
    {
        "guideline": {
            "guideline": "3.3.2",
            "success_criteria": "input element has more than one associated label",
            "examples": [
                {
                    "problem": "<label for=\"name\">Name</label>\n<input type=\"text\" id=\"name\" name=\"name\">\n<label for=\"name\">First Name</label>",
                    "solution": "<label for=\"name\">Name</label>\n<input type=\"text\" id=\"name\" name=\"name\">"
                }
            ]
        },
        "problem": {
            "guideline": "3.3.2",
            "line": 66,
            "problem": "<label for=\"email\">Email:</label>"
        },
        "closest_fix": {
            "offending_line": "<label for=\"email\">Email:</label>",
            "fixed_line": "<label for=\"email\">Email:</label><input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Your email\">",
            "CoT": "To find the issue of an input element having more than one associated label, I will:\n\n1. Look for input elements within the form in the HTML.\n2. Check each input element to see if it is associated with more than one label.\n3. If an input element has multiple associated labels, then this will be the accessibility issue that needs to be addressed."
        }
    },
    {
        "guideline": {
            "guideline": "2.1.1",
            "success_criteria": "onmousedown event missing onkeydown event or script is not keyboard accessible",
            "examples": [
                {
                    "problem": "<button onclick=\"alert('Hello World!')\">Click me</button>",
                    "solution": "<button onclick=\"alert('Hello World!')\" onkeydown=\"alert('Hello World!')\">Click me</button>"
                },
                {
                    "problem": "<a href=\"#\" onclick=\"alert('Hello World!')\">Click me</a>",
                    "solution": "<a href=\"#\" onclick=\"alert('Hello World!')\" onkeydown=\"alert('Hello World!')\">Click me</a>"
                }
            ]
        },
        "problem": {
            "guideline": "2.1.1",
            "line": 51,
            "problem": "<section id=\"video-container\" onmouseout=\"PauseVideo()\">"
        },
        "closest_fix": {
            "offending_line": "<button onmousedown=\"addToCart('ComfortFitTShirt')\">Add to Cart</button>",
            "fixed_line": "<button onmousedown=\"addToCart('ComfortFitTShirt')\" onkeydown=\"addToCart('ComfortFitTShirt')\">Add to Cart</button>",
            "CoT": "To address this issue, I will need to carefully examine the HTML code provided. I will specifically look for any elements that have interactive functionality triggered by a mouse event (such as `onmousedown`), but lack an equivalent keyboard event (such as `onkeydown`) or alternative keyboard-accessible method to perform the same action. This ensures that users who rely on keyboard navigation or assistive technologies can interact with the website effectively.\n\nI will start by scanning the HTML elements for any instances of `onmousedown` attributes or any elements that seem to require mouse interaction. Then, I will determine if there are corresponding keyboard-accessible alternatives or if an `onkeydown` event should be added."
        }
    }
]