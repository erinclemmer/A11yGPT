[
    {
        "guideline": "1.1.1",
        "success_criteria": "alt attribute is missing in iframe or img tag",
        "error_example": "<img src=\"logo.png\">",
        "fixed_example": "<img src=\"logo.png\" alt=\"Beauty Products Logo\">",
        "error_fixes": [
            {
                "problem_type": "alt attribute is missing in img tag",
                "offending_line": "<img src='logo.png' width='100' height='100'>",
                "fixed_line": "<img src='logo.png' width='100' height='100' alt='Website Logo'>",
                "CoT": "Sure, let's start by searching for `<img>` and `<iframe>` tags in the HTML code to ensure they have an `alt` attribute included."
            }
        ]
    },
    {
        "guideline": "1.3.1",
        "success_criteria": "input element or button is missing an associated label, it contains an alt attribute, or its label is empty",
        "error_example": "<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "fixed_example": "<label for=\"myfile\">I have a file</label><br>\n<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "error_fixes": [
            {
                "problem_type": "input element or button is missing an associated label",
                "offending_line": "<input type=\"text\" id=\"name\" name=\"name\" required>",
                "fixed_line": "<label for=\"name\">Name:</label><input type=\"text\" id=\"name\" name=\"name\" required>",
                "CoT": "Sure! Let's go step by step to identify any input elements or buttons that have issues related to missing or empty labels:\n\n1. Look for any `<input>` elements within the `<form>` that are missing associated `<label>` elements or have empty labels.\n2. Look for any `<button>` elements that are missing associated `<label>` elements or have empty labels.\n\nI will analyze the code following these steps to find any accessibility issues related to missing or empty labels for input elements or buttons."
            }
        ]
    },
    {
        "guideline": "1.4.2",
        "success_criteria": "Audio or video element should avoid automatically playing audio ",
        "error_example": "<source src=\"bookstore-video.mp4\" type=\"video/mp4\" />",
        "fixed_example": "<video controls>\n<source src=\"bookstore-video.mp4\" type=\"video/mp4\">\nYour browser does not support the video tag.\n</video>",
        "error_fixes": [
            {
                "problem_type": "Audio or video element should avoid automatically playing audio",
                "offending_line": "<video autoplay>",
                "fixed_line": "<video controls>",
                "CoT": "To identify if there is an issue with automatically playing audio or video on the website, we need to look for any `<audio>` or `<video>` elements in the HTML that have the `autoplay` attribute set.\n\nLet's search for any `<audio>` or `<video>` elements with the `autoplay` attribute in the provided HTML code."
            }
        ]
    },
    {
        "guideline": "1.4.4",
        "success_criteria": "<b> <i> or <font> tag should not be used",
        "error_example": "<font size=\"5\">Description of the book...</font>",
        "fixed_example": "<p>Description of the book...</p>",
        "error_fixes": [
            {
                "problem_type": "<b> or <i> tag should not be used",
                "offending_line": "<b>, <i>, or <font> tags should not be used for styling purposes.",
                "fixed_line": "Replace <b> tag with <strong> and <i> tag with <em> for semantic correctness. Use CSS for styling instead of <font> tag.",
                "CoT": "1. Analyze the HTML structure to identify any <b>, <i>, or <font> tags being used.\n\n2. Search through the provided HTML code to find if any <b>, <i>, or <font> tags are present.\n\n3. Evaluate the usage of these tags in the code and check if they are being used for styling purposes.\n\n4. If any <b>, <i>, or <font> tags are found, consider replacing them with appropriate semantic HTML elements or using CSS for styling instead.\n\nLet's start by examining the provided HTML code for any instances of <b>, <i>, or <font> tags."
            }
        ]
    },
    {
        "guideline": "2.1.1",
        "success_criteria": "onmousedown event missing onkeydown event or script is not keyboard accessible",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "onmousedown event missing onkeydown event or script is not keyboard accessible",
                "offending_line": "<button onmousedown=\"playVideo()\">Play Video</button>",
                "fixed_line": "<button onmousedown=\"playVideo()\" onkeydown=\"if(event.keyCode==13) {playVideo();}\">Play Video</button>",
                "CoT": "For this type of issue where the `onmousedown` event is present but the `onkeydown` event or script is missing, we need to ensure that the functionality triggered by `onmousedown` is also accessible via keyboard interactions for users who rely on keyboard navigation. Here's how we can go about finding and fixing this issue step by step:\n\n1. Identify the element with the `onmousedown` event: Look for any elements that have the `onmousedown` attribute in the HTML. In this case, it's the button element:\n   ```html\n   <button onmousedown=\"playVideo()\">Play Video</button>\n   ```\n\n2. Determine the functionality triggered by the `onmousedown` event: In this case, the `playVideo()` function is triggered by clicking the button.\n\n3. Check if the functionality can be triggered using a keyboard event: Since the issue is with missing `onkeydown` event or script for keyboard accessibility, we need to add an `onkeydown` event to the button element that replicates the functionality of playing the video. This will allow users to activate the button using the keyboard as well.\n\n4. Add `onkeydown` event to the button: We can add an `onkeydown` event to the button that listens for the \"Enter\" key (key code 13) to trigger the `playVideo()` function:\n   ```html\n   <button onmousedown=\"playVideo()\" onkeydown=\"if(event.keyCode==13) {playVideo();}\">Play Video</button>\n   ```\n\n5. Test the accessibility: After adding the `onkeydown` event, test the website using only the keyboard to ensure that the functionality works as expected and the video can be played by pressing the \"Enter\" key on the button.\n\n6. Make necessary adjustments: If needed, you can further enhance the keyboard accessibility by adding focus styles, ARIA attributes, or other keyboard navigation enhancements based on best practices.\n\nBy following these steps, we can ensure that the website is more accessible by providing keyboard functionality for users who rely on it."
            }
        ]
    },
    {
        "guideline": "2.2.1",
        "success_criteria": "meta refresh with a time-out is used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Meta refresh with a time-out is used",
                "offending_line": "<meta http-equiv=\"refresh\" content=\"0\">",
                "fixed_line": "<meta http-equiv=\"refresh\" content=\"0; url=index.html\">",
                "CoT": "Sure! Here's how we can approach finding the issues with the \"meta refresh with a time-out\" being used:\n\n1. Identify where the meta refresh tag is in the HTML code.\n2. Determine if a time-out value is specified in the meta refresh tag.\n3. Assess whether the use of meta refresh with a time-out is necessary for the functionality of the website.\n4. Consider the impact of the meta refresh on users with disabilities, such as those using screen readers or assistive technologies.\n5. Verify if the meta refresh interferes with users' ability to navigate or interact with the content effectively.\n\nBy following these steps, we should be able to pinpoint any accessibility issues related to the use of meta refresh with a time-out. Let's examine the HTML code for the specified problem."
            }
        ]
    },
    {
        "guideline": "2.2.2",
        "success_criteria": "<marquee> element should not be used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Marquee element used",
                "offending_line": "<marquee>Welcome to Your Website</marquee>",
                "fixed_line": "<div>Welcome to Your Website</div>",
                "CoT": "Sure, I will break down the process into steps to find the accessibility issue of using the `<marquee>` element:\n\n1. Understand the issue: The `<marquee>` element is a non-standard, non-accessible HTML element that scrolls text or images across the screen. It is not recommended to use `<marquee>` as it can be disorienting for users with cognitive or visual impairments.\n\n2. Identify the `<marquee>` element: Look through the HTML code provided to find if any `<marquee>` element is being used. \n\n3. Verify the usage: Check if the `<marquee>` element is used inappropriately and if the scrolling text or images can cause accessibility issues.\n\n4. Determine alternative solutions: If the `<marquee>` element is found, suggest alternative methods to achieve the desired effect without compromising accessibility.\n\nLet's go through the provided HTML code to identify if the `<marquee>` element is being used."
            }
        ]
    },
    {
        "guideline": "2.4.2",
        "success_criteria": "title element is empty",
        "error_example": "<title></title>",
        "fixed_example": "<title>Beauty Products Store</title>",
        "error_fixes": [
            {
                "problem_type": "Empty title element",
                "offending_line": "<title>Your Website</title>",
                "fixed_line": "<title>Accessible Website Template</title>",
                "CoT": "To fix the issue of the empty title element, I will need to update the title tag to include a meaningful title for the website. This will improve accessibility for users who rely on screen readers by providing them with a clear understanding of the content of the page. Let's update the title element from `<title>Your Website</title>` to `<title>Accessible Website Template</title>` or any other appropriate title that accurately represents the content of the website."
            }
        ]
    },
    {
        "guideline": "2.4.4",
        "success_criteria": "anchor element contains no text",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "anchor element contains no text",
                "offending_line": "<li><a href=\"#services\"></a></li>",
                "fixed_line": "<li><a href=\"#services\">Services</a></li>",
                "CoT": "Sure! Let's analyze the code step by step to find the accessibility issue of anchor elements containing no text:\n\nStep 1: Identify anchor elements in the code:\nWe have four anchor elements in the code inside the `<nav>` element:\n```html\n<li><a href=\"#home\">Home</a></li>\n<li><a href=\"#about\">About</a></li>\n<li><a href=\"#services\"></a></li>\n<li><a href=\"#contact\">Contact</a></li>\n```\n\nStep 2: Check if anchor elements have text content:\n- The first, second, and fourth anchor elements have text content: \"Home\", \"About\", and \"Contact\" respectively.\n- The third anchor element does not have any text content between the opening and closing anchor tags.\n\nStep 3: Determine if an anchor element with no text content is a potential accessibility issue:\n- Anchor elements (links) without text content pose accessibility issues for users who rely on screen readers or keyboard navigation.\n- Screen readers will announce the presence of the link, but without any visible text, users may not understand the purpose of the link.\n\nStep 4: Propose a solution:\nTo address this accessibility issue, add meaningful text content to the anchor element that is currently empty:\n```html\n<li><a href=\"#services\">Services</a></li>\n```\n\nBy adding text content to the anchor element, such as \"Services\", we ensure that users of assistive technologies can understand the purpose of the link."
            }
        ]
    },
    {
        "guideline": "3.1.1",
        "success_criteria": "document language not identified or incorrect",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Document language not identified or incorrect",
                "offending_line": "<html>",
                "fixed_line": "<html lang=\"en\">",
                "CoT": "1. Look for the language attribute in the opening <html> tag:\n```html\n<html lang=\"en\">\n```\n2. If the language attribute is missing or incorrect, add/modify it to reflect the correct language of the document.\n3. Update the <html> tag to include the language attribute with the appropriate language code (e.g., \"en\" for English)."
            }
        ]
    },
    {
        "guideline": "3.3.2",
        "success_criteria": "input element has more than one associated label",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Input element has more than one associated label",
                "offending_line": "<label for=\"name\">Name:</label>",
                "fixed_line": "<label for=\"name\">Name: <input type=\"text\" id=\"name\" name=\"name\" required></label>",
                "CoT": "To find the issue where an input element has more than one associated label, we need to do the following steps:\n\n1. Identify all the input elements in the HTML.\n2. Identify all the labels in the HTML.\n3. Check if any input element has more than one associated label.\n4. Highlight the input element(s) that have this issue."
            }
        ]
    },
    {
        "guideline": "4.1.1",
        "success_criteria": "element does not have complete start and end tags or id attribute is not unique",
        "error_example": "<li><a href=\"#\">Services</li>",
        "fixed_example": "<li><a href=\"#\">Services</a></li>",
        "error_fixes": [
            {
                "problem_type": "Element does not have complete start and end tags",
                "offending_line": "<li><a href=\"#services\"></a></li>",
                "fixed_line": "<li><a href=\"#services\">Services</a></li>",
                "CoT": "Sure, let's go through it step by step:\n\n1. Check if all elements have complete start and end tags.\n2. Check if each element has a unique ID attribute."
            }
        ]
    }
]