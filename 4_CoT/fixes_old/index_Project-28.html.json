[
    {
        "guideline": "1.1.1",
        "success_criteria": "alt attribute is missing in iframe or img tag",
        "error_example": "<img src=\"logo.png\">",
        "fixed_example": "<img src=\"logo.png\" alt=\"Beauty Products Logo\">",
        "error_fixes": [
            {
                "problem_type": "alt attribute is missing in img tag",
                "offending_line": "<img src=\"food1.jpg\" alt=\"Food 1\">",
                "fixed_line": "<img src=\"food1.jpg\" alt=\"Food 1\" />",
                "CoT": "First, I will scan through the HTML code to identify any `<img>` tags that are missing the `alt` attribute."
            }
        ]
    },
    {
        "guideline": "1.3.1",
        "success_criteria": "input element or button is missing an associated label, it contains an alt attribute, or its label is empty",
        "error_example": "<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "fixed_example": "<label for=\"myfile\">I have a file</label><br>\n<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "error_fixes": [
            {
                "problem_type": "input element or button is missing an associated label",
                "offending_line": "<input type=\"text\" id=\"search\" placeholder=\"Search...\">",
                "fixed_line": "<label for=\"search\">Search:</label>\n<input type=\"text\" id=\"search\" placeholder=\"Search...\">",
                "CoT": "1. Look for input elements or buttons in the HTML code.\n2. Check if they have associated labels using the \"for\" attribute.\n3. Verify if the labels are properly connected to the input elements or buttons.\n4. Make sure the label is descriptive and provides context to the input element or button.\n5. Check if any input element or button has an empty label or missing associated label.\n6. Confirm if the input element or button has an alt attribute if it is an image.\n7. Identify if any input element or button is missing an alt attribute if it's an image.\n8. Provide a suggestion on how to fix the accessibility issue."
            }
        ]
    },
    {
        "guideline": "1.4.2",
        "success_criteria": "Audio or video element should avoid automatically playing audio ",
        "error_example": "<source src=\"bookstore-video.mp4\" type=\"video/mp4\" />",
        "fixed_example": "<video controls>\n<source src=\"bookstore-video.mp4\" type=\"video/mp4\">\nYour browser does not support the video tag.\n</video>",
        "error_fixes": [
            {
                "problem_type": "Audio or video element automatically playing audio",
                "offending_line": "<video controls autoplay src='video.mp4'></video>",
                "fixed_line": "<video controls autoplay muted src='video.mp4'></video>",
                "CoT": "To find the issue of audio or video elements automatically playing audio, I would follow these steps:\n\n1. Look for any `<video>` or `<audio>` elements in the HTML code.\n2. Check if these elements have the `autoplay` attribute. \n3. If the `autoplay` attribute is present, verify if it is accompanied by the `muted` attribute. \n4. If the `autoplay` attribute is present without the `muted` attribute, then that element is set to play audio automatically, which should be avoided for accessibility reasons."
            }
        ]
    },
    {
        "guideline": "1.4.4",
        "success_criteria": "<b> <i> or <font> tag should not be used",
        "error_example": "<font size=\"5\">Description of the book...</font>",
        "fixed_example": "<p>Description of the book...</p>",
        "error_fixes": [
            {
                "problem_type": "Use of <font> tag",
                "offending_line": "<font size=\"5\"> Delicious food just for you!</font>",
                "fixed_line": "<p style=\"font-size: 1.2em;\">Delicious food just for you!</p>",
                "CoT": "1. Identify any <font> tags in the HTML code.\n2. Check if any <font> tags are used for styling purposes.\n3. Determine if <font> tags should be replaced with CSS styles for better accessibility.\n4. Ensure that all text is styled using CSS instead of <font> tags."
            }
        ]
    },
    {
        "guideline": "2.1.1",
        "success_criteria": "onmousedown event missing onkeydown event or script is not keyboard accessible",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Missing keyboard accessibility event",
                "offending_line": "<div class=\"menu-item\" onmouseover=\"ExternalFunction()\">",
                "fixed_line": "<div class=\"menu-item\" onmouseover=\"ExternalFunction()\" onkeydown=\"ExternalFunction()\" tabindex=\"0\">",
                "CoT": "To find issues related to missing `onmousedown` events or non-keyboard accessible scripts, we need to focus on interactive elements on the page that may require user interactions. These interactive elements can include buttons or links that trigger actions.\n\nHere are the steps to identify and fix the accessibility issue:\n\n1. Identify interactive elements: Look for elements like buttons that have event handlers, such as `onmouseover`, but are missing corresponding keyboard event handlers like `onkeydown`.\n\n2. Confirm keyboard accessibility: Determine if the interactive elements can also be triggered or activated using the keyboard without relying on the mouse.\n\n3. Implement keyboard accessibility: Add appropriate keyboard event handlers like `onkeydown` that perform the same action as the `onmousedown` event to ensure users can interact with the element using the keyboard.\n\nLet's go through the HTML code provided and look for interactive elements without proper keyboard accessibility. I'll specifically check for elements with `onmouseover` events that may be missing `onkeydown` equivalents."
            }
        ]
    },
    {
        "guideline": "2.2.1",
        "success_criteria": "meta refresh with a time-out is used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": []
    },
    {
        "guideline": "2.2.2",
        "success_criteria": "<marquee> element should not be used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "The <marquee> element should not be used for scrolling text.",
                "offending_line": "<marquee> element is not present in the HTML provided.",
                "fixed_line": "NONE",
                "CoT": "Step 1: Identify any <marquee> elements in the HTML document. \n\nStep 2: Determine if any <marquee> elements are used for scrolling text or other content.\n\nStep 3: If any <marquee> elements are found, consider alternative methods of achieving the desired effect without using the <marquee> element."
            }
        ]
    },
    {
        "guideline": "2.4.2",
        "success_criteria": "title element is empty",
        "error_example": "<title></title>",
        "fixed_example": "<title>Beauty Products Store</title>",
        "error_fixes": [
            {
                "problem_type": "title element is empty",
                "offending_line": "<title>Restaurant Menu</title>",
                "fixed_line": "<title>Restaurant Menu - Our Delicious Menu</title>",
                "CoT": "1. Use a tool like a browser extension or online validator to check for HTML accessibility issues.\n2. Look for any empty title elements in the HTML document to ensure that all pages have meaningful titles."
            }
        ]
    },
    {
        "guideline": "2.4.4",
        "success_criteria": "anchor element contains no text",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Anchor element contains no text",
                "offending_line": "<a href=\"#menu\" class=\"btn\">View Menu</a>",
                "fixed_line": "<a href=\"#menu\" class=\"btn\">View Menu</a><span class=\"sr-only\">Click to view menu</span>",
                "CoT": "Sure! To find the issue of an anchor element containing no text, we need to look for `<a>` tags that do not have any text content within them. In this case, we are looking for anchor elements that do not have any visible text between the opening and closing `<a>` tags. Let's take a look at the HTML code provided and identify any instances where an anchor element contains no text."
            }
        ]
    },
    {
        "guideline": "3.1.1",
        "success_criteria": "document language not identified or incorrect",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "",
                "offending_line": "NONE",
                "fixed_line": "",
                "CoT": "Sure, let's go step by step to identify and fix the issue of document language not identified or incorrect:\n\n1. Look for the `<html>` tag and check if there is a `lang` attribute defined. If not, add it with the correct language code. In this case, \"eg\" is not a valid language code. Let's change it to \"en\" for English:\n```html\n<html lang=\"en\">\n```\n\n2. Save the changes and you have now fixed the issue of the document language not being identified or being incorrect.\n\nWould you like me to assist with anything else?"
            }
        ]
    },
    {
        "guideline": "3.3.2",
        "success_criteria": "input element has more than one associated label",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Input element has more than one associated label",
                "offending_line": "<label for=\"search\">Search:</label>\n<label for=\"search\">Search:</label>",
                "fixed_line": "<label for=\"search\">Search:</label>",
                "CoT": "Sure! To find the issue where an input element has more than one associated label, we need to:\n\n1. Identify all the input elements in the HTML code.\n2. Check each input element and see how many labels are associated with it using the \"for\" attribute on the labels.\n3. If an input element has more than one associated label, then we have found the accessability issue.\n\nLet's start by identifying all the input elements in the HTML: \n\n1. Input element for search:\n```html\n<input type=\"text\" id=\"search\" placeholder=\"Search...\">\n```\n\n2. Input element for sorting:\n```html\n<select id=\"sort\">\n  <option value=\"default\">Default</option>\n  <option value=\"price\">Price</option>\n</select>\n```\n\nNow, we need to check how many labels are associated with each input element by looking at the \"for\" attribute on the labels.\n\nLet's start with the search input element:\n```html\n<label for=\"search\">Search:</label>\n<label for=\"search\">Search:</label>\n```\nWe can see that the search input element has two associated labels, which is an accessability issue.\n\nNow, let's check the sorting input element:\n```html\n<!-- No label associated with the sorting input element -->\n```\n\nBased on our analysis, we have found the accessability issue where the search input element has more than one associated label.\n\nPlease let me know if you would like me to help you fix this issue."
            }
        ]
    },
    {
        "guideline": "4.1.1",
        "success_criteria": "element does not have complete start and end tags or id attribute is not unique",
        "error_example": "<li><a href=\"#\">Services</li>",
        "fixed_example": "<li><a href=\"#\">Services</a></li>",
        "error_fixes": [
            {
                "problem_type": "element does not have complete start and end tags",
                "offending_line": "<label for='search'>Search:</label>",
                "fixed_line": "<label for='search'>Search:</label><input type='text' id='search' placeholder='Search...'>",
                "CoT": "1. Look for incomplete start and end tags in the HTML code.\n2. Check if any elements have duplicate id attributes."
            }
        ]
    }
]