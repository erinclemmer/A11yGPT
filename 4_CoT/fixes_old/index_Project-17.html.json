[
    {
        "guideline": "1.1.1",
        "success_criteria": "alt attribute is missing in iframe or img tag",
        "error_example": "<img src=\"logo.png\">",
        "fixed_example": "<img src=\"logo.png\" alt=\"Beauty Products Logo\">",
        "error_fixes": [
            {
                "problem_type": "alt attribute is missing in img tag",
                "offending_line": "<img src='background.jpg'>",
                "fixed_line": "<img src='background.jpg' alt='Background Image'>",
                "CoT": "Let's start by searching for `<img>` or `<iframe>` tags in the HTML code since these are the elements that may require the `alt` attribute."
            }
        ]
    },
    {
        "guideline": "1.3.1",
        "success_criteria": "input element or button is missing an associated label, it contains an alt attribute, or its label is empty",
        "error_example": "<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "fixed_example": "<label for=\"myfile\">I have a file</label><br>\n<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "error_fixes": [
            {
                "problem_type": "input element or button is missing an associated label",
                "offending_line": "<label for=\"password\"></label><br>",
                "fixed_line": "    <label for=\"password\">Password:</label><br>",
                "CoT": "Step 1: Identify input elements and buttons that should have associated labels\nStep 2: Check if the labels for those input elements and buttons are properly defined\nStep 3: Ensure that the labels are not empty\nStep 4: Make sure that the labels are properly associated with the corresponding input elements and buttons"
            }
        ]
    },
    {
        "guideline": "1.4.2",
        "success_criteria": "Audio or video element should avoid automatically playing audio ",
        "error_example": "<source src=\"bookstore-video.mp4\" type=\"video/mp4\" />",
        "fixed_example": "<video controls>\n<source src=\"bookstore-video.mp4\" type=\"video/mp4\">\nYour browser does not support the video tag.\n</video>",
        "error_fixes": [
            {
                "problem_type": "Audio or video element should avoid automatically playing audio",
                "offending_line": "<audio autoplay src='background-music.mp3'></audio>",
                "fixed_line": "<audio controls src='background-music.mp3'></audio>",
                "CoT": "1. Look for any `<audio>` or `<video>` elements in the HTML code.\n2. Check if any of these elements have the `autoplay` attribute set.\n3. If there is an `autoplay` attribute present, consider whether the audio or video content automatically playing could be disruptive for some users.\n4. If the autoplay behavior could be disruptive, suggest removing the `autoplay` attribute or adding controls for users to play the media manually."
            }
        ]
    },
    {
        "guideline": "1.4.4",
        "success_criteria": "<b> <i> or <font> tag should not be used",
        "error_example": "<font size=\"5\">Description of the book...</font>",
        "fixed_example": "<p>Description of the book...</p>",
        "error_fixes": [
            {
                "problem_type": "Use of <b> tag",
                "offending_line": "<h1>Resume Maker</h1>",
                "fixed_line": "<h1><strong>Resume Maker</strong></h1>",
                "CoT": "Sure, let's start by looking through the HTML code provided and identifying any instances where the `<b>`, `<i>`, or `<font>` tags are used. We should replace these tags with appropriate semantic HTML elements or CSS styling to improve accessibility."
            }
        ]
    },
    {
        "guideline": "2.1.1",
        "success_criteria": "onmousedown event missing onkeydown event or script is not keyboard accessible",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "onmousedown event missing onkeydown event",
                "offending_line": "<a onmouseover=\"sample()\" href=\"#\">Home</a>",
                "fixed_line": "<a onmouseover=\"sample()\" onkeydown=\"sample()\" href=\"#\">Home</a>",
                "CoT": "Step 1: Identify interactive elements that are missing keyboard accessibility, such as buttons or links that don't have keyboard event handlers.\nStep 2: Look for elements that have mouse-specific events like onmouseover, onmousedown, etc., but lack equivalent keyboard events like onkeydown, onkeypress, etc.\nStep 3: Check if there are any scripts used for interactions that are not keyboard accessible.\nStep 4: Ensure that all interactive elements can be accessed and activated using the keyboard alone."
            }
        ]
    },
    {
        "guideline": "2.2.1",
        "success_criteria": "meta refresh with a time-out is used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": []
    },
    {
        "guideline": "2.2.2",
        "success_criteria": "<marquee> element should not be used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "marquee element used",
                "offending_line": "<marquee> element should not be used.",
                "fixed_line": "<!-- <marquee> element is not accessible and should not be used. -->",
                "CoT": "First, I will look through the HTML code to find any instances of the `<marquee>` element. I will search for any `<marquee>` tags or attributes in the code provided. Let me look for those."
            }
        ]
    },
    {
        "guideline": "2.4.2",
        "success_criteria": "title element is empty",
        "error_example": "<title></title>",
        "fixed_example": "<title>Beauty Products Store</title>",
        "error_fixes": [
            {
                "problem_type": "Empty Title Element",
                "offending_line": "<title>Resume Maker</title>",
                "fixed_line": "<title>Resume Maker - Your Online Resume Builder</title>",
                "CoT": "Sure, let's go step by step to find the issues:\n\n1. Check the `title` element in the `head` section to see if it is empty or missing a descriptive title."
            }
        ]
    },
    {
        "guideline": "2.4.4",
        "success_criteria": "anchor element contains no text",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Anchor element contains no text",
                "offending_line": "<a onmouseover=\"sample()\" href=\"#\">Home</a>",
                "fixed_line": "<a onmouseover=\"sample()\" href=\"#\"><span>Home</span></a>",
                "CoT": "Sure, let's go step by step to identify where the anchor element contains no text:\n\n1. Look for anchor elements in the HTML code - `<a></a>`\n2. Check if any of the anchor elements have no text content between the opening and closing tags\n3. Mark any anchor element that does not have any visible text content\n\nLet's start by looking for anchor elements in the HTML code."
            }
        ]
    },
    {
        "guideline": "3.1.1",
        "success_criteria": "document language not identified or incorrect",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "document language not identified or incorrect",
                "offending_line": "<html lang=\"ex\">",
                "fixed_line": "<html lang=\"en\">",
                "CoT": "Step 1: Identify where the language of the document is specified in the HTML. \nStep 2: Verify if the language attribute is set correctly.\nStep 3: If the language attribute is not set or set incorrectly, update it to the correct value.\nStep 4: Test the updated HTML for correctness in identifying the document language."
            }
        ]
    },
    {
        "guideline": "3.3.2",
        "success_criteria": "input element has more than one associated label",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "input element has more than one associated label",
                "offending_line": "<label for=\"password\"></label><br>",
                "fixed_line": "<label for=\"password\">Password:</label><br>",
                "CoT": "1. Look for input elements in the HTML code.\n2. Check if each input element has associated label elements using the \"for\" attribute.\n3. If there are input elements with more than one associated label, then that is the accessibility issue we need to address."
            }
        ]
    },
    {
        "guideline": "4.1.1",
        "success_criteria": "element does not have complete start and end tags or id attribute is not unique",
        "error_example": "<li><a href=\"#\">Services</li>",
        "fixed_example": "<li><a href=\"#\">Services</a></li>",
        "error_fixes": [
            {
                "problem_type": "Element does not have a complete end tag",
                "offending_line": "<label for=\"password\"></label><br>",
                "fixed_line": "<label for=\"password\">Password:</label><br>",
                "CoT": "Step 1: Identify elements that do not have complete start and end tags:\n- Look for any elements that are not closed properly, like missing closing tags such as `<label for=\"password\"></label>`.\n  \nStep 2: Check for elements with non-unique id attributes:\n- Look for elements with the same id attribute value, like two elements with id=\"1\" as seen in the radio buttons `<input type=\"radio\" id=\"1\" name=\"fav_number\" value=\"1\">`.\n\nStep 3: Make necessary corrections to fix the identified accessibility issues."
            }
        ]
    }
]