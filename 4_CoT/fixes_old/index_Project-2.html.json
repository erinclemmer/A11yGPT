[
    {
        "guideline": "1.1.1",
        "success_criteria": "alt attribute is missing in iframe or img tag",
        "error_example": "<img src=\"logo.png\">",
        "fixed_example": "<img src=\"logo.png\" alt=\"Beauty Products Logo\">",
        "error_fixes": [
            {
                "problem_type": "alt attribute is missing in img tag",
                "offending_line": "<img src='book-cover.jpg' />",
                "fixed_line": "<img src='book-cover.jpg' alt='Book Cover' />",
                "CoT": "To find the issue related to missing alt attribute in img or iframe tags, I would:\n1. Look for img tags in the HTML code.\n2. Check if each img tag has an alt attribute with a descriptive text.\n3. If any img tag is missing the alt attribute, that would be the issue to fix.\n\nLet's start by identifying the img tags in the given HTML code and checking if they have the alt attribute."
            }
        ]
    },
    {
        "guideline": "1.3.1",
        "success_criteria": "input element or button is missing an associated label, it contains an alt attribute, or its label is empty",
        "error_example": "<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "fixed_example": "<label for=\"myfile\">I have a file</label><br>\n<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "error_fixes": [
            {
                "problem_type": "Input element is missing an associated label",
                "offending_line": "<input type=\"text\" id=\"search\" placeholder=\"Search...\" aria-label=\"Search\" />",
                "fixed_line": "<label for=\"search\">Search:</label><input type=\"text\" id=\"search\" placeholder=\"Search...\" aria-label=\"Search\" />",
                "CoT": "Sure, let's go step by step to find the accessibility issues related to missing labels for input elements or buttons:\n\n1. Look for input elements and buttons throughout the HTML code.\n2. Check if each input element or button has a corresponding label associated with it using the \"for\" attribute.\n3. Ensure that the labels are descriptive and provide context for the input element or button.\n4. Check if the labels are visible on the webpage or hidden for specific styling purposes.\n5. Identify any input elements or buttons that have a missing or empty label, as this can make it difficult for screen readers to interpret the content.\n\nI will now review the HTML code for any missing labels associated with input elements or buttons."
            }
        ]
    },
    {
        "guideline": "1.4.2",
        "success_criteria": "Audio or video element should avoid automatically playing audio ",
        "error_example": "<source src=\"bookstore-video.mp4\" type=\"video/mp4\" />",
        "fixed_example": "<video controls>\n<source src=\"bookstore-video.mp4\" type=\"video/mp4\">\nYour browser does not support the video tag.\n</video>",
        "error_fixes": [
            {
                "problem_type": "Audio or video element should avoid automatically playing audio",
                "offending_line": "<video autoplay>",
                "fixed_line": "<video controls>\n\t<source src='bookstore-video.mp4' type='video/mp4' />\n\tYour browser does not support the video tag.\n</video>",
                "CoT": "To identify and fix the issue of automatically playing audio or video, we need to focus on the `<video>` element in the HTML code. \n\n1. Look for the `<video>` element in the code.\n2. Check if the `autoplay` attribute is present in the `<video>` tag.\n3. If the `autoplay` attribute is present, it means the video will start playing automatically without user interaction, which is problematic for accessibility.\n\nLet's locate the `<video>` element in the code and confirm if the `autoplay` attribute is present."
            }
        ]
    },
    {
        "guideline": "1.4.4",
        "success_criteria": "<b> <i> or <font> tag should not be used",
        "error_example": "<font size=\"5\">Description of the book...</font>",
        "fixed_example": "<p>Description of the book...</p>",
        "error_fixes": [
            {
                "problem_type": "Use of <font> tag",
                "offending_line": "<font size=\"5\">Description of the book...</font>",
                "fixed_line": "<p style=\"font-size: 1.5em;\">Description of the book...</p>",
                "CoT": "1. Look for any `<b>`, `<i>`, or `<font>` tags in the HTML code.\n2. Check where these tags are being used and if they are being used for styling or formatting purposes.\n3. Consider whether the styling or formatting can be achieved using CSS instead of deprecated HTML tags.\n4. Identify if there are any accessibility concerns related to the use of these tags, such as how screen readers interpret them.\n5. Make recommendations on how to replace or update the `<b>`, `<i>`, or `<font>` tags with more accessible alternatives, such as using semantic HTML elements and CSS for styling."
            }
        ]
    },
    {
        "guideline": "2.1.1",
        "success_criteria": "onmousedown event missing onkeydown event or script is not keyboard accessible",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "onmousedown event missing",
                "offending_line": "<button>Read More</button>",
                "fixed_line": "<button onmousedown='handleReadMore()'>Read More</button>",
                "CoT": "To identify the accessibility issue related to the missing `onmousedown` event or lack of keyboard accessibility, we need to focus on interactive elements such as buttons or links that trigger actions. \n\n1. Identify interactive elements: Look for elements like buttons or links that need to be activated by users.\n2. Check event handlers: Determine if these elements have event handlers like `onmousedown` for mouse users or `onkeydown` for keyboard users.\n3. Test keyboard accessibility: Verify that users can interact with the element using only the keyboard, without relying on mouse actions.\n\nLet's go through the HTML code provided and identify any missing `onmousedown` event handlers or issues related to keyboard accessibility."
            }
        ]
    },
    {
        "guideline": "2.2.1",
        "success_criteria": "meta refresh with a time-out is used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": []
    },
    {
        "guideline": "2.2.2",
        "success_criteria": "<marquee> element should not be used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Marquee element used",
                "offending_line": "<marquee> element should not be used.",
                "fixed_line": "Replace the <marquee> element with a more accessible alternative.",
                "CoT": "Step 1: Identify if there is any use of the <marquee> element in the provided HTML code. \nStep 2: If there is no <marquee> element, then the accessibility issue related to using it is not present in the code.\nStep 3: If the <marquee> element is found, then it should be removed or replaced with a more accessible alternative."
            }
        ]
    },
    {
        "guideline": "2.4.2",
        "success_criteria": "title element is empty",
        "error_example": "<title></title>",
        "fixed_example": "<title>Beauty Products Store</title>",
        "error_fixes": [
            {
                "problem_type": "Empty title element",
                "offending_line": "<title>Bookstore</title>",
                "fixed_line": "<title>Bookstore - Home</title>",
                "CoT": "To find the issue where the `<title>` element is empty, follow these steps:\n\n1. Locate the `<title>` element within the `<head>` section of the HTML document.\n2. Check if there is any content within the `<title>` element.\n3. If the `<title>` element is empty, meaning there is no text within it, then this would be the issue identified.\n\nI will review the provided HTML to check if the `<title>` element is empty."
            }
        ]
    },
    {
        "guideline": "2.4.4",
        "success_criteria": "anchor element contains no text",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "anchor element contains no text",
                "offending_line": "<a href=\"#home\">Home</a>",
                "fixed_line": "<a href=\"#home\">Home</a>Home",
                "CoT": "Sure, here's how we can approach finding the issue step by step:\n\n1. Identify all anchor elements (`<a>` tags) in the HTML.\n2. Check if each anchor element contains text content within the opening and closing tags.\n3. If any anchor element does not contain text content, consider adding relevant text to improve accessibility.\n\nLet's start by looking at all anchor elements in the HTML."
            }
        ]
    },
    {
        "guideline": "3.1.1",
        "success_criteria": "document language not identified or incorrect",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Document language not identified or incorrect",
                "offending_line": "<html lang=\"en\">",
                "fixed_line": "<html lang=\"en\" />",
                "CoT": "Sure! To identify and fix the issue of the document language not being identified or incorrect, we need to follow these steps:\n\n1. Locate the opening <html> tag in the HTML document.\n2. Check if the \"lang\" attribute is included in the <html> tag.\n3. Ensure that the value of the \"lang\" attribute is set to the appropriate language code. In this case, it should be set to \"en\" for English.\n4. If the \"lang\" attribute is missing or set to an incorrect language code, update it to \"en\" for English.\n\nLet's start by analyzing the code to see if the document language is correctly identified."
            }
        ]
    },
    {
        "guideline": "3.3.2",
        "success_criteria": "input element has more than one associated label",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "input element has more than one associated label",
                "offending_line": "<input type=\"text\" id=\"search\" placeholder=\"Search...\" aria-label=\"Search\" />",
                "fixed_line": "Add the same label 'search' that is used in the 'for' attribute to the input element directly, like so: <input type=\"text\" id=\"search\" name=\"search\" placeholder=\"Search...\" aria-label=\"Search\" />",
                "CoT": "To find the issue of an input element having more than one associated label, we need to:\n1. Identify all the <input> elements in the HTML code.\n2. Check each <input> element to see how many <label> elements are associated with it using the \"for\" attribute.\n3. If an <input> element has multiple <label> elements associated with it, then we have found the accessibility issue to be fixed."
            }
        ]
    },
    {
        "guideline": "4.1.1",
        "success_criteria": "element does not have complete start and end tags or id attribute is not unique",
        "error_example": "<li><a href=\"#\">Services</li>",
        "fixed_example": "<li><a href=\"#\">Services</a></li>",
        "error_fixes": [
            {
                "problem_type": "element does not have complete start and end tags",
                "offending_line": "        <img src=\"book-cover.jpg\" />",
                "fixed_line": "        <img src=\"book-cover.jpg\"></img>",
                "CoT": "Sure! Let's start by looking for elements that do not have complete start and end tags. We need to ensure that all elements have both a start tag and an end tag for proper accessibility. Let's scan through the HTML and identify any missing end tags."
            }
        ]
    }
]