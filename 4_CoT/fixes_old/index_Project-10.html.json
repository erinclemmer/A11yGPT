[
    {
        "guideline": "1.1.1",
        "success_criteria": "alt attribute is missing in iframe or img tag",
        "error_example": "<img src=\"logo.png\">",
        "fixed_example": "<img src=\"logo.png\" alt=\"Beauty Products Logo\">",
        "error_fixes": [
            {
                "problem_type": "alt attribute is missing in img tag",
                "offending_line": "<img src='image.jpg'>",
                "fixed_line": "<img src='image.jpg' alt='Website Image'>",
                "CoT": "First, let's search for any `<img>` or `<iframe>` tags in the HTML code. We'll then check if each of them contains the `alt` attribute. Let's start with the `<img>` tags."
            }
        ]
    },
    {
        "guideline": "1.3.1",
        "success_criteria": "input element or button is missing an associated label, it contains an alt attribute, or its label is empty",
        "error_example": "<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "fixed_example": "<label for=\"myfile\">I have a file</label><br>\n<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "error_fixes": [
            {
                "problem_type": "input element or button is missing an associated label",
                "offending_line": "<input type=\"text\" id=\"name\" name=\"name\" required>",
                "fixed_line": "<label for=\"name\">Name:</label><input type=\"text\" id=\"name\" name=\"name\" required>",
                "CoT": "Step 1: Identify all input elements and buttons on the webpage.\nStep 2: Check if each input element or button has an associated label.\nStep 3: Ensure that the label is not empty.\nStep 4: Check if the alt attribute is present for any button or input element.\n\nLet's start by identifying all input elements and buttons on the webpage to check for associated labels."
            }
        ]
    },
    {
        "guideline": "1.4.2",
        "success_criteria": "Audio or video element should avoid automatically playing audio ",
        "error_example": "<source src=\"bookstore-video.mp4\" type=\"video/mp4\" />",
        "fixed_example": "<video controls>\n<source src=\"bookstore-video.mp4\" type=\"video/mp4\">\nYour browser does not support the video tag.\n</video>",
        "error_fixes": [
            {
                "problem_type": "Audio or video element automatically starts playing audio",
                "offending_line": "<section id=\"home\" class=\"hero\">\n        <h1>Welcome to Your Website</h1>\n        <p>This is a simple and functional website template.</p>\n        <button onmousedown=\"playVideo()\">Play Video</button>\n    </section>\n",
                "fixed_line": "<section id=\"home\" class=\"hero\">\n        <h1>Welcome to Your Website</h1>\n        <p>This is a simple and functional website template.</p>\n        <button onclick=\"playVideo()\">Play Video</button>\n    </section>\n",
                "CoT": "To identify the issue of the audio or video element automatically playing audio, we need to look for any `<video>` or `<audio>` elements in the HTML that have attributes set to automatically start playing. \n\nLet's search for any `<video>` or `<audio>` elements that have attributes like `autoplay` or `autostart` which could cause the media to start playing automatically."
            }
        ]
    },
    {
        "guideline": "1.4.4",
        "success_criteria": "<b> <i> or <font> tag should not be used",
        "error_example": "<font size=\"5\">Description of the book...</font>",
        "fixed_example": "<p>Description of the book...</p>",
        "error_fixes": [
            {
                "problem_type": "Use of <b> tag",
                "offending_line": "<h1>Welcome to Your Website</h1>",
                "fixed_line": "<h1><strong>Welcome to Your Website</strong></h1>",
                "CoT": "1. Look through the HTML code for any instances of `<b>`, `<i>`, or `<font>` tags.\n2. Check if any text formatting or styling is done using these tags.\n3. Identify any text that should be styled differently for better accessibility.\n4. Suggest alternatives to these tags that follow best practices for accessibility."
            }
        ]
    },
    {
        "guideline": "2.1.1",
        "success_criteria": "onmousedown event missing onkeydown event or script is not keyboard accessible",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "onmousedown event missing onkeydown event or script is not keyboard accessible",
                "offending_line": "<button onmousedown=\"playVideo()\">Play Video</button>",
                "fixed_line": "<button onmousedown=\"playVideo()\" onkeydown=\"playVideo()\" tabindex=\"0\">Play Video</button>",
                "CoT": "To find and fix the accessibility issue related to the `onmousedown` event missing the `onkeydown` event or script not being keyboard accessible:\n\n1. Identify the element with the `onmousedown` attribute in the HTML.\n2. Understand the purpose behind the `onmousedown` event and see if it can be triggered using a keyboard event instead.\n3. Check if there is a corresponding `onkeydown` event attached to the same element or a way for keyboard-only users to trigger the same action.\n4. If the action can be achieved through keyboard interaction, update the event handling to include both `onmousedown` and `onkeydown`.\n5. Test the website using keyboard navigation to ensure that users can access and interact with the element using keyboard-only controls.\n6. Make necessary adjustments to ensure that the script is fully keyboard accessible and functions properly for users who rely on keyboard input."
            }
        ]
    },
    {
        "guideline": "2.2.1",
        "success_criteria": "meta refresh with a time-out is used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Meta refresh with a time-out is used",
                "offending_line": "<meta http-equiv=\"refresh\" content=\"0\">",
                "fixed_line": "<meta http-equiv=\"refresh\" content=\"0;URL='your-website-url'\"> <!-- Replace 'your-website-url' with the actual URL of the website -->",
                "CoT": "Alright, let's break it down step by step to find the accessibility issue related to the use of meta refresh with a timeout:\n\n1. **Identify the meta refresh tag**: Look through the `<head>` section of the HTML code to find the meta tag responsible for refreshing the page with a timeout.\n\n2. **Understand the impact on accessibility**: Consider how the automatic refresh imposed by the meta tag might affect users who rely on assistive technologies or have specific needs, such as screen reader users, individuals with cognitive disabilities, or those who need more time to interact with and navigate a webpage.\n\n3. **Check for alternatives**: Review if the meta refresh is necessary for the functionality of the website, or if there are alternative methods to achieve the same goal without the use of an automatic refresh.\n\n4. **Verify compliance with accessibility guidelines**: Confirm if the use of meta refresh with a timeout aligns with accessibility guidelines such as the Web Content Accessibility Guidelines (WCAG) to ensure that all users can access and interact with the webpage effectively.\n\nBy following these steps, we can pinpoint the accessibility issue related to the implementation of meta refresh with a timeout in the provided HTML code. Let's start by locating the meta tag responsible for the automatic refresh."
            }
        ]
    },
    {
        "guideline": "2.2.2",
        "success_criteria": "<marquee> element should not be used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Marquee Element Used",
                "offending_line": "<marquee>",
                "fixed_line": "<marquee> element should not be used as it can cause accessibility issues. Consider an alternative method for any moving text or elements.",
                "CoT": "Step 1: Identify any <marquee> elements in the HTML code. Let's search for <marquee> tags in the provided HTML code."
            }
        ]
    },
    {
        "guideline": "2.4.2",
        "success_criteria": "title element is empty",
        "error_example": "<title></title>",
        "fixed_example": "<title>Beauty Products Store</title>",
        "error_fixes": [
            {
                "problem_type": "Title element is empty",
                "offending_line": "<title>Your Website</title>",
                "fixed_line": "<title>Your Website - Home</title>",
                "CoT": "Sure, let's identify the issue step by step:\n\n1. **Identify the Title Element**: \n   - Look for the `<title>` tag within the `<head>` section of the HTML document.\n\n2. **Check if the Title Element is Empty**:\n   - Ensure that there is text content within the `<title>` tag.\n   - An empty `<title>` tag can be considered an accessibility issue, as it doesn't provide meaningful information to users when they navigate through multiple tabs or bookmarks.\n\nLet's carefully examine the HTML code to locate and address this issue."
            }
        ]
    },
    {
        "guideline": "2.4.4",
        "success_criteria": "anchor element contains no text",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Anchor element contains no text",
                "offending_line": "<a href=\"#services\"></a>",
                "fixed_line": "<a href=\"#services\">Services</a>",
                "CoT": "Sure! Let's start by identifying the anchor elements in the code: \n```html\n<a href=\"#home\">Home</a>\n<a href=\"#about\">About</a>\n<a href=\"#services\"></a>\n<a href=\"#contact\">Contact</a>\n```\n\nThe issue we need to look for is anchor elements that do not have any text inside them. In this case, the anchor element with `href=\"#services\"` does not have any text content within it.\n\nThis can be a problem for accessibility because users who rely on screen readers may not be able to understand the purpose of the link if there is no text to describe it. Let's fix this by adding text to the anchor element."
            }
        ]
    },
    {
        "guideline": "3.1.1",
        "success_criteria": "document language not identified or incorrect",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Document language not identified",
                "offending_line": "<html>",
                "fixed_line": "<html lang=\"en\">",
                "CoT": "To identify and fix the issue of \"document language not identified or incorrect,\" we need to ensure that the language of the webpage is properly declared in the HTML. Here's a step-by-step approach to finding and addressing this issue:\n\n1. Check the `<html>` tag: Look for the `<html>` tag in the HTML document. There should be a `lang` attribute within the opening `<html>` tag to specify the language of the document.\n\n2. Update the `<html>` tag: Add the `lang` attribute to the `<html>` tag and set it to the appropriate language code. For example, for English, you would set `lang=\"en\"`.\n\n3. Verify language consistency: Ensure that the language specified in the `lang` attribute matches the primary language used on the webpage.\n\n4. Save and test: Save the updated HTML document, reload the webpage in a browser, and verify that the language is correctly identified in the document.\n\nBy following these steps, you can address the issue of \"document language not identified or incorrect\" by properly declaring the language of the webpage in the HTML."
            }
        ]
    },
    {
        "guideline": "3.3.2",
        "success_criteria": "input element has more than one associated label",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Input element has more than one associated label",
                "offending_line": "<label for=\"name\">Name:</label>",
                "fixed_line": "<label for=\"name\">Name:</label><br>",
                "CoT": "To find the issue where an input element has more than one associated label, we need to:\n1. Look for all `<input>` elements in the HTML code.\n2. Check each `<input>` element to see if it has associated `<label>` elements using the `for` attribute or by wrapping the `<input>` element with `<label>` tags.\n3. If an `<input>` element has more than one associated `<label>` element, then that would be the accessibility issue we are looking for."
            }
        ]
    },
    {
        "guideline": "4.1.1",
        "success_criteria": "element does not have complete start and end tags or id attribute is not unique",
        "error_example": "<li><a href=\"#\">Services</li>",
        "fixed_example": "<li><a href=\"#\">Services</a></li>",
        "error_fixes": [
            {
                "problem_type": "Element does not have complete start and end tags or id attribute is not unique",
                "offending_line": "<li><a href=\"#services\"></a></li>",
                "fixed_line": "<li><a href=\"#services\">Services</a></li>",
                "CoT": "First, let's identify if there are any elements without complete start and end tags. We will also check if the id attributes are unique for each element. Let's start from the top: \n\n1. The `<li>` element under the services section is missing the anchor text in the `<a>` tag.\n2. The `<a>` tag under services should include an anchor text like `<a href=\"#services\">Services</a>`.\n\nLet's make these adjustments to ensure all elements have complete start and end tags."
            }
        ]
    }
]