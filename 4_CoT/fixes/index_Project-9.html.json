[
    {
        "guideline": "1.1.1",
        "success_criteria": "alt attribute is missing in iframe or img tag",
        "error_example": "<img src=\"logo.png\">",
        "fixed_example": "<img src=\"logo.png\" alt=\"Beauty Products Logo\">",
        "error_fixes": [
            {
                "problem_type": "alt attribute is missing in img tag",
                "offending_line": "<source src=\"hospital_video.mp4\" type=\"video/mp4\">",
                "fixed_line": "<source src=\"hospital_video.mp4\" type=\"video/mp4\" alt=\"Video of our hospital\">",
                "CoT": "Sure, let's start by going through the HTML step by step to identify any `<img>` or `<iframe>` tags that are missing the `alt` attribute. We will check each of these tags and ensure they have an appropriate `alt` attribute for accessibility purposes. Let's begin."
            }
        ]
    },
    {
        "guideline": "1.3.1",
        "success_criteria": "input element or button is missing an associated label, it contains an alt attribute, or its label is empty",
        "error_example": "<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "fixed_example": "<label for=\"myfile\">I have a file</label><br>\n<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "error_fixes": [
            {
                "problem_type": "input element or button is missing an associated label, it contains an alt attribute, or its label is empty",
                "offending_line": "<label for=\"name\"></label>",
                "fixed_line": "<label for=\"name\">Name:</label>",
                "CoT": "Step 1: Identify all input elements and buttons on the page. \n\nStep 2: Check if each input element or button has an associated label. \n\nStep 3: Check if the label for each input element or button is empty. \n\nStep 4: Check if the input element or button has an alt attribute instead of a label. \n\nLet's start by following these steps."
            }
        ]
    },
    {
        "guideline": "1.4.2",
        "success_criteria": "Audio or video element should avoid automatically playing audio ",
        "error_example": "<source src=\"bookstore-video.mp4\" type=\"video/mp4\" />",
        "fixed_example": "<video controls>\n<source src=\"bookstore-video.mp4\" type=\"video/mp4\">\nYour browser does not support the video tag.\n</video>",
        "error_fixes": [
            {
                "problem_type": "Audio or video element automatically plays audio",
                "offending_line": "<video width=\"400\" controls>\n<source src=\"hospital_video.mp4\" type=\"video/mp4\">",
                "fixed_line": "<video width=\"400\" controls muted>\n<source src=\"hospital_video.mp4\" type=\"video/mp4\">",
                "CoT": "Step 1: Identify any `<audio>` or `<video>` elements on the webpage.  \nStep 2: Check if the audio or video elements have the `autoplay` attribute that automatically plays the audio or video content.  \nStep 3: If the autoplay attribute is present, consider modifying it to only play the content when the user explicitly chooses to play it."
            }
        ]
    },
    {
        "guideline": "1.4.4",
        "success_criteria": "<b> <i> or <font> tag should not be used",
        "error_example": "<font size=\"5\">Description of the book...</font>",
        "fixed_example": "<p>Description of the book...</p>",
        "error_fixes": [
            {
                "problem_type": "Using <marquee> tag for Header text",
                "offending_line": "<marquee>Hospital Management System</marquee>",
                "fixed_line": "<h1>Hospital Management System</h1>",
                "CoT": "Step 1: Identify any <b>, <i>, or <font> tags in the HTML code. Look for any instances where these tags are used to style text.\n\nStep 2: Determine if the text styling done using <b>, <i>, or <font> tags can be replaced with CSS styles. Evaluate if the styling can be achieved using CSS properties like font-weight, font-style, or color.\n\nStep 3: Replace the <b>, <i>, or <font> tags with appropriate CSS styles either by adding classes to the elements or by directly styling them with CSS.\n\nStep 4: Test the updated HTML code to ensure that the text styling is maintained and the accessibility issue of using presentational tags like <b>, <i>, or <font> is resolved."
            }
        ]
    },
    {
        "guideline": "2.1.1",
        "success_criteria": "onmousedown event missing onkeydown event or script is not keyboard accessible",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "onkeydown event missing on mousedown event",
                "offending_line": "<video width=\"400\" controls>",
                "fixed_line": "<video width=\"400\" controls onmousedown=\"this.focus()\" tabindex=\"0\">",
                "CoT": "To find the issue related to the missing \"onmousedown\" event or \"onkeydown\" event for keyboard accessibility, we need to look for elements that require user interaction like forms, buttons, links, etc., and check if they have appropriate keyboard accessibility features.\n\n1. Start by checking the form elements in the HTML code: \n   - Look at the form fields (input, textarea, button) and see if they have event attributes like \"onmousedown\" or \"onkeydown\" to handle keyboard interactions.\n\n2. Check if there are any interactive elements without keyboard accessibility:\n   - Look for elements that trigger certain actions (like clicking, submitting a form) and ensure they have keyboard alternatives for users who do not use a mouse.\n\n3. Investigate if any JavaScript code is used to handle user interactions:\n   - Look for any JavaScript functions or event listeners that are attached to interactive elements. Check if these functions include keyboard event handling.\n\n4. Verify if the website follows accessibility standards:\n   - Use an accessibility tool (such as WAVE, Axe, or Lighthouse) to scan the website and identify accessibility issues related to keyboard accessibility.\n\nBy following these steps, we can pinpoint any elements or functions that lack proper keyboard accessibility handling on the website. Let's begin the review."
            }
        ]
    },
    {
        "guideline": "2.2.1",
        "success_criteria": "meta refresh with a time-out is used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Meta refresh with time-out used",
                "offending_line": "<meta http-equiv=\"refresh\" content=\"0\">",
                "fixed_line": "<!-- Meta refresh removed to improve accessibility -->",
                "CoT": "Step 1: Identify the issue - \nThe issue is with the use of the meta refresh tag with a time-out, as it can be disruptive and confusing for users who rely on screen readers or keyboard navigation. \n\nStep 2: Analyze the code - \nIn the provided code, there is a meta refresh tag with a content value of \"0\" which triggers an immediate refresh of the page. This can be problematic for users who might not have enough time to read or interact with the content before it refreshes abruptly.\n\nStep 3: Address the issue - \nTo fix this accessibility issue related to the meta refresh tag with a time-out, the meta tag should be removed or adjusted to provide users with enough time to read and interact with the content before any page refresh occurs. Removing the meta refresh tag is the preferable solution to ensure a better user experience for all visitors.\n\nSo, the accessibility issue in the given code is the use of the meta refresh tag with a time-out, and the recommended solution is to remove or adjust the meta refresh tag to improve accessibility for users."
            }
        ]
    },
    {
        "guideline": "2.2.2",
        "success_criteria": "<marquee> element should not be used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "The <marquee> element should not be used.",
                "offending_line": "<marquee>Hospital Management System</marquee>",
                "fixed_line": "<h1>Hospital Management System</h1>",
                "CoT": "Step 1: Identify the <marquee> element in the html code.\n\nStep 2: Understand why the <marquee> element should not be used for accessibility reasons.\n\nStep 3: Provide a solution or alternative to replace the <marquee> element."
            }
        ]
    },
    {
        "guideline": "2.4.2",
        "success_criteria": "title element is empty",
        "error_example": "<title></title>",
        "fixed_example": "<title>Beauty Products Store</title>",
        "error_fixes": [
            {
                "problem_type": "Empty title element",
                "offending_line": "<title>Hospital Management System</title>",
                "fixed_line": "<title>Hospital Management System</title>",
                "CoT": "Step 1: Locate the `<title>` element in the HTML code.\nStep 2: Verify if the `<title>` element is empty or missing the appropriate text.\nStep 3: If the `<title>` element is empty or missing relevant text, then identify it as an accessibility issue related to an empty `<title>` element."
            }
        ]
    },
    {
        "guideline": "2.4.4",
        "success_criteria": "anchor element contains no text",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "anchor element contains no text",
                "offending_line": "<label for=\"name\"></label>",
                "fixed_line": "<label for=\"name\">Name:</label>",
                "CoT": "Sure, let's go step by step in finding the issue of \"anchor element contains no text\":\n\n1. Identify all the anchor elements in the HTML.\n2. Check each anchor element to see if it contains any visible text or content.\n3. If an anchor element does not contain any visible text or content, then it violates the rule of \"anchor element contains no text.\"\n\nLet's start by identifying all the anchor elements in the HTML code provided. I will list them out for clarity:\n\n1. `<a href=\"#home\">Home</a>`\n2. `<a href=\"#services\">Services</a>`\n3. `<a href=\"#about\">About Us</a>`\n4. `<a href=\"#contact\">Contact</a>`\n\nNow, let's check each anchor element to see if it contains any visible text or content."
            }
        ]
    },
    {
        "guideline": "3.1.1",
        "success_criteria": "document language not identified or incorrect",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "document language not identified or incorrect",
                "offending_line": "<html lang=\"en\">",
                "fixed_line": "<html lang=\"en\" prefix=\"og: http://ogp.me/ns#\">",
                "CoT": "To identify and fix the issue of \"document language not identified or incorrect,\" we should follow these steps:\n\n1. Locate the <html> tag in the HTML document.\n2. Check if the \"lang\" attribute is included within the <html> tag.\n3. Ensure that the value of the \"lang\" attribute is set to the appropriate language code (e.g., \"en\" for English).\n4. If the \"lang\" attribute is missing or incorrect, update it to reflect the correct language code."
            }
        ]
    },
    {
        "guideline": "3.3.2",
        "success_criteria": "input element has more than one associated label",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "input element has more than one associated label",
                "offending_line": "<label for=\"name\"></label>",
                "fixed_line": "<label for=\"name\">Name:</label>",
                "CoT": "Step 1: Identify all the input elements on the page.\nStep 2: Check each input element and look for associated label elements.\nStep 3: Verify if any input element has more than one associated label element."
            }
        ]
    },
    {
        "guideline": "4.1.1",
        "success_criteria": "element does not have complete start and end tags or id attribute is not unique",
        "error_example": "<li><a href=\"#\">Services</li>",
        "fixed_example": "<li><a href=\"#\">Services</a></li>",
        "error_fixes": [
            {
                "problem_type": "Element does not have complete start and end tags",
                "offending_line": "<label for=\"name\"></label>",
                "fixed_line": "<label for=\"name\">Name:</label>",
                "CoT": "Sure, let's start by checking for elements that do not have complete start and end tags. We'll also make sure that all id attributes are unique."
            }
        ]
    }
]