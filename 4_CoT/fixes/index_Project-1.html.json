[
    {
        "guideline": "1.1.1",
        "success_criteria": "alt attribute is missing in iframe or img tag",
        "error_example": "<img src=\"logo.png\">",
        "fixed_example": "<img src=\"logo.png\" alt=\"Beauty Products Logo\">",
        "error_fixes": [
            {
                "problem_type": "alt attribute is missing in img tag",
                "offending_line": "<img src=\"logo.png\">",
                "fixed_line": "<img src=\"logo.png\" alt=\"Logo\">",
                "CoT": "1. Look for `iframe` tags in the HTML.\n2. Check if each `iframe` tag has an `alt` attribute.\n3. If the `alt` attribute is missing, flag it as an accessibility issue.\n4. Look for `img` tags in the HTML.\n5. Check if each `img` tag has an `alt` attribute.\n6. If the `alt` attribute is missing, flag it as an accessibility issue."
            }
        ]
    },
    {
        "guideline": "1.3.1",
        "success_criteria": "input element or button is missing an associated label, it contains an alt attribute, or its label is empty",
        "error_example": "<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "fixed_example": "<label for=\"myfile\">I have a file</label><br>\n<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "error_fixes": [
            {
                "problem_type": "input element or button is missing an associated label",
                "offending_line": "<label for=\"vehicle1\"></label><br>",
                "fixed_line": "<label for=\"vehicle1\">I have a bike</label><br>",
                "CoT": "1. Look for `<input>` elements and `<button>` elements.\n2. Check if each input element and button has an associated label using the `for` attribute or by wrapping the input/button within a `<label>` element.\n3. Check if the input element or button has an `alt` attribute.\n4. Check if the label associated with the input element or button is empty.\n5. Identify any instances where the above criteria are not met.\n6. Provide a solution to fix the issue."
            }
        ]
    },
    {
        "guideline": "1.4.2",
        "success_criteria": "Audio or video element should avoid automatically playing audio ",
        "error_example": "<source src=\"bookstore-video.mp4\" type=\"video/mp4\" />",
        "fixed_example": "<video controls>\n<source src=\"bookstore-video.mp4\" type=\"video/mp4\">\nYour browser does not support the video tag.\n</video>",
        "error_fixes": [
            {
                "problem_type": "Auto playing video element",
                "offending_line": "<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/VIDEO_ID\" frameborder=\"0\" allowfullscreen></iframe>",
                "fixed_line": "<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/VIDEO_ID\" frameborder=\"0\" allowfullscreen allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"></iframe>",
                "CoT": "Firstly, we need to identify if there's any audio or video element on the page that plays automatically. In this case, there is a video element in the `<section class=\"video\">` with a placeholder `src=\"https://www.youtube.com/embed/VIDEO_ID\"`. \n\nNext, we need to check if the video element has the autoplay feature enabled. If it does, we need to disable it to comply with the accessibility rule that audio or video elements should avoid automatically playing audio. \n\nLet's review the video element attributes to see if autoplay is enabled."
            }
        ]
    },
    {
        "guideline": "1.4.4",
        "success_criteria": "<b> <i> or <font> tag should not be used",
        "error_example": "<font size=\"5\">Description of the book...</font>",
        "fixed_example": "<p>Description of the book...</p>",
        "error_fixes": [
            {
                "problem_type": "Tag <b> should not be used",
                "offending_line": "<h1>Welcome to our Beauty Products Store</h1>",
                "fixed_line": "<h1><strong>Welcome to our Beauty Products Store</strong></h1>",
                "CoT": "1. Look through the HTML code provided.\n2. Search for any instances of `<b>`, `<i>`, or `<font>` tags being used.\n3. If any of these tags are found, identify where they are being used and what the styling or purpose is.\n4. Recommend replacing these tags with appropriate CSS styles for better accessibility and to adhere to modern web standards."
            }
        ]
    },
    {
        "guideline": "2.1.1",
        "success_criteria": "onmousedown event missing onkeydown event or script is not keyboard accessible",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "onmousedown event missing onkeydown event or script is not keyboard accessible",
                "offending_line": "<a href=\"#\" class=\"btn\" style=\"color: #fff; background-color: #ff3366;\">Shop Now</a>",
                "fixed_line": "<a href=\"#\" class=\"btn\" style=\"color: #fff; background-color: #ff3366;\" role=\"button\" tabindex=\"0\" onkeydown=\"if(event.key === 'Enter'){/* handle enter key press */}\">Shop Now</a>",
                "CoT": "1. Identify interactive elements such as links, buttons, form fields, etc. that may require keyboard interaction.\n2. Check if these elements have appropriate keyboard event handlers such as `onkeydown`.\n3. Ensure that keyboard users can access the functionality of the interactive elements without relying on mouse events like `onmousedown`."
            }
        ]
    },
    {
        "guideline": "2.2.1",
        "success_criteria": "meta refresh with a time-out is used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": []
    },
    {
        "guideline": "2.2.2",
        "success_criteria": "<marquee> element should not be used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Use of marquee element",
                "offending_line": "<marquee> element should not be used",
                "fixed_line": "<marquee> element is an accessibility issue and should not be used",
                "CoT": "To find the accessibility issue related to the `<marquee>` element, we need to check if there is any `<marquee>` element in the HTML code. Let's look for a `<marquee>` element in the given HTML code."
            }
        ]
    },
    {
        "guideline": "2.4.2",
        "success_criteria": "title element is empty",
        "error_example": "<title></title>",
        "fixed_example": "<title>Beauty Products Store</title>",
        "error_fixes": [
            {
                "problem_type": "Empty title element",
                "offending_line": "<title></title>",
                "fixed_line": "<title>Beauty Products Store</title>",
                "CoT": "To find and fix the issue where the title element is empty, follow these steps:\n\n1. Look for the `<title>` tag in the `<head>` section of the HTML document.\n2. Check if there is any text content between the opening and closing `<title>` tags.\n3. If the `<title>` tag is empty or does not have meaningful text content, then it violates the accessibility guideline.\n4. To fix the issue, add a descriptive and concise title within the `<title>` tags that accurately represents the content of the page.\n\nBy following these steps, you should be able to identify and address the problem of an empty title element in the HTML document."
            }
        ]
    },
    {
        "guideline": "2.4.4",
        "success_criteria": "anchor element contains no text",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "anchor element contains no text",
                "offending_line": "<label for='vehicle1'></label><br>",
                "fixed_line": "<label for='vehicle1'>I have a bike</label><br>",
                "CoT": "To find the issue of the anchor element containing no text, first I will look for all the anchor `<a>` elements in the HTML and then check if they have any text content within them. If an anchor element is missing text content, that means it contains no text and it violates the accessibility principle of providing clear and descriptive link text for users."
            }
        ]
    },
    {
        "guideline": "3.1.1",
        "success_criteria": "document language not identified or incorrect",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "document language not identified or incorrect",
                "offending_line": "<html lang=\"en\">",
                "fixed_line": "<html lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\">",
                "CoT": "1. Look for where the language of the document is specified in the HTML.\n2. Determine if the specified language is correct and properly formatted."
            }
        ]
    },
    {
        "guideline": "3.3.2",
        "success_criteria": "input element has more than one associated label",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Input element has more than one associated label",
                "offending_line": "<label for='vehicle1'></label><br>",
                "fixed_line": "<label for='vehicle1'>Bike</label><br>",
                "CoT": "To find the issue where an input element has more than one associated label, we need to:\n1. Look for all input elements in the form.\n2. For each input element, check how many labels are associated with it using the `for` attribute in the `label` tags.\n3. If an input element has more than one associated label, that would be the accessability issue we are looking for."
            }
        ]
    },
    {
        "guideline": "4.1.1",
        "success_criteria": "element does not have complete start and end tags or id attribute is not unique",
        "error_example": "<li><a href=\"#\">Services</li>",
        "fixed_example": "<li><a href=\"#\">Services</a></li>",
        "error_fixes": [
            {
                "problem_type": "element does not have complete start and end tags",
                "offending_line": "<input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" value=\"Bike\">",
                "fixed_line": "<input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" value=\"Bike\"></input>",
                "CoT": "To find and fix issues where an element does not have complete start and end tags or where an id attribute is not unique:\n1. Scan through the HTML code to identify elements that may have incomplete start and end tags. Look for elements like `<input>`, `<img>`, `<br>`, `<hr>`, and make sure they all have complete start and end tags.\n2. Check for elements that have an `id` attribute and ensure that the `id` is unique within the document. Duplicate `id` attributes can cause issues with JavaScript functions and CSS styling.\n3. Verify that all form elements like `<input>`, `<label>`, `<textarea>`, and `<button>` have proper nesting and corresponding start and end tags.\n4. Pay special attention to elements with self-closing tags, such as `<input>` and `<img>`, and ensure they have a trailing forward slash before the closing angle bracket.\n5. Double-check the `id` attributes of form elements like radio buttons, checkboxes, and file inputs to ensure they are unique.\n6. Consider using tools like a code validator or browser developer tools to help identify any missing or duplicate elements in the HTML code."
            }
        ]
    }
]