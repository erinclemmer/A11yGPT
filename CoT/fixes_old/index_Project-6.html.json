[
    {
        "guideline": "1.1.1",
        "success_criteria": "alt attribute is missing in iframe or img tag",
        "error_example": "<img src=\"logo.png\">",
        "fixed_example": "<img src=\"logo.png\" alt=\"Beauty Products Logo\">",
        "error_fixes": [
            {
                "problem_type": "alt attribute is missing in img tag",
                "offending_line": "<img src=\"song1.jpg\" alt=\"Song 1\">",
                "fixed_line": "<img src=\"song1.jpg\" alt=\"Song 1 - Artist Name\">",
                "CoT": "To find the accessibility issue of missing the `alt` attribute in an `img` tag, we need to go through each `img` tag in the HTML and ensure that it has an `alt` attribute that describes the purpose or content of the image for screen readers. Let's locate and check all `img` tags one by one."
            }
        ]
    },
    {
        "guideline": "1.3.1",
        "success_criteria": "input element or button is missing an associated label, it contains an alt attribute, or its label is empty",
        "error_example": "<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "fixed_example": "<label for=\"myfile\">I have a file</label><br>\n<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "error_fixes": [
            {
                "problem_type": "input element or button missing associated label",
                "offending_line": "<button class=\"play-btn\"></button>",
                "fixed_line": "<button class=\"play-btn\" aria-label=\"Play\"></button>",
                "CoT": "Step 1: Identify all the input elements and buttons on the page.\n\nStep 2: Check if each input element or button has an associated label.\n\nStep 3: Verify if the label is empty, or if the input element or button has alt attribute.\n\nStep 4: Determine if any element violates the rule stating that the input element or button is missing an associated label, contains an alt attribute, or has an empty label."
            }
        ]
    },
    {
        "guideline": "1.4.2",
        "success_criteria": "Audio or video element should avoid automatically playing audio ",
        "error_example": "<source src=\"bookstore-video.mp4\" type=\"video/mp4\" />",
        "fixed_example": "<video controls>\n<source src=\"bookstore-video.mp4\" type=\"video/mp4\">\nYour browser does not support the video tag.\n</video>",
        "error_fixes": [
            {
                "problem_type": "Audio or video element should avoid automatically playing audio",
                "offending_line": "<video autoplay>",
                "fixed_line": "<video>",
                "CoT": "To find and fix the issue where audio or video elements automatically play, we need to follow these steps:\n\n1. Identify any audio or video elements in the HTML.\n2. Check if any of the elements have the autoplay attribute.\n3. If found, remove the autoplay attribute to prevent the audio or video from playing automatically.\n\nLet's go through the HTML and identify if there are any audio or video elements with autoplay."
            }
        ]
    },
    {
        "guideline": "1.4.4",
        "success_criteria": "<b> <i> or <font> tag should not be used",
        "error_example": "<font size=\"5\">Description of the book...</font>",
        "fixed_example": "<p>Description of the book...</p>",
        "error_fixes": [
            {
                "problem_type": "Use of <b> tag for bold text styling",
                "offending_line": "<p><b>Artist Name</b></p>",
                "fixed_line": "<p><strong>Artist Name</strong></p>",
                "CoT": "1. Identify any `<b>`, `<i>`, or `<font>` tags used in the HTML.\n2. Determine if these tags are being used for styling purposes.\n3. If any of these tags are found to be used for styling, suggest an alternative method such as using CSS classes for styling."
            }
        ]
    },
    {
        "guideline": "2.1.1",
        "success_criteria": "onmousedown event missing onkeydown event or script is not keyboard accessible",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "onmousedown event missing onkeydown event",
                "offending_line": "<button class=\"play-btn\"></button>",
                "fixed_line": "<button class=\"play-btn\" onmousedown=\"playAudio()\" onkeydown=\"playAudio()\" tabindex=\"0\"></button>",
                "CoT": "To check if the website is keyboard accessible according to the given problem, we need to ensure that all interactive elements can also be accessed and used with a keyboard.\n\n1. Navigate through the website using only the keyboard (tab key) to ensure that all interactive elements (links, buttons, form fields) can be reached and highlighted.\n2. Pay attention to the navigation bar, links, buttons, and form elements specifically to make sure they are accessible via keyboard navigation.\n3. Look for any elements that have `onmousedown` events and ensure that they also have corresponding `onkeydown` events for keyboard users to trigger the same action.\n4. If any elements are found with `onmousedown` events without `onkeydown` events, they need to be updated to ensure keyboard accessibility."
            }
        ]
    },
    {
        "guideline": "2.2.1",
        "success_criteria": "meta refresh with a time-out is used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": []
    },
    {
        "guideline": "2.2.2",
        "success_criteria": "<marquee> element should not be used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Marquee element used",
                "offending_line": "<marquee> element should not be used.",
                "fixed_line": "",
                "CoT": "To find and fix the issue of using the `<marquee>` element, I will follow these steps:\n\n1. **Identify the problem**: Look for any `<marquee>` elements in the HTML code provided.\n\n2. **Replace the `<marquee>` element**: Remove the `<marquee>` element from the code and find an alternative approach to achieve the same functionality if needed.\n\nLet's go ahead and identify if there are any `<marquee>` elements in the HTML code provided."
            }
        ]
    },
    {
        "guideline": "2.4.2",
        "success_criteria": "title element is empty",
        "error_example": "<title></title>",
        "fixed_example": "<title>Beauty Products Store</title>",
        "error_fixes": [
            {
                "problem_type": "Title element is empty",
                "offending_line": "<title>Music Player</title>",
                "fixed_line": "<title>Music Player Website</title>",
                "CoT": "To find if the title element is empty, we need to check the content inside the `<title>` tag in the `<head>` section of the HTML document. If there is no text within the `<title>` tag, then the title element is considered empty. \n\nLet's take a look at the provided HTML code to see if the title element is empty."
            }
        ]
    },
    {
        "guideline": "2.4.4",
        "success_criteria": "anchor element contains no text",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "anchor element contains no text",
                "offending_line": "<a href=\"#browse\" class=\"btn\">Browse Music</a>",
                "fixed_line": "<a href=\"#browse\" class=\"btn\">Browse Music</a>",
                "CoT": "To find the issue of anchor elements containing no text, we need to iterate through all anchor elements in the HTML code and check if they have any text content within the `<a>` tags. We can achieve this by inspecting each `<a>` element and verifying that it has some text content specified between the opening and closing `<a>` tags."
            }
        ]
    },
    {
        "guideline": "3.1.1",
        "success_criteria": "document language not identified or incorrect",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "document language not identified or incorrect",
                "offending_line": "<html lang=\"en\">",
                "fixed_line": "<html lang=\"en\" xml:lang=\"en\">",
                "CoT": "Step 1: Check if the language attribute is properly set in the html tag."
            }
        ]
    },
    {
        "guideline": "3.3.2",
        "success_criteria": "input element has more than one associated label",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Input element has more than one associated label",
                "offending_line": "<input type=\"text\" id=\"playlist-name\" name=\"playlist-name\" required>",
                "fixed_line": "<input type=\"text\" id=\"playlist-name\" name=\"playlist-name\" aria-labelledby=\"playlist-label\" required>",
                "CoT": "Sure, here is the step-by-step process to identify the issue:\n\n1. Identify all input elements in the HTML code.\n2. Check if each input element has associated label elements.\n3. Determine if any input element has more than one associated label.\n4. If any input element has more than one associated label, that would be the accessibility issue to address.\n\nI will go through the code and identify if any input element has more than one associated label."
            }
        ]
    },
    {
        "guideline": "4.1.1",
        "success_criteria": "element does not have complete start and end tags or id attribute is not unique",
        "error_example": "<li><a href=\"#\">Services</li>",
        "fixed_example": "<li><a href=\"#\">Services</a></li>",
        "error_fixes": [
            {
                "problem_type": "element does not have complete start and end tags",
                "offending_line": "<input type=\"text\" id=\"playlist-name\" name=\"playlist-name\" required>",
                "fixed_line": "<input type=\"text\" id=\"playlist-name\" name=\"playlist-name\" required>",
                "CoT": "Sure, let's go through the steps to identify and fix the issues:\n\n1. Check if all elements have complete start and end tags. Look for any elements that are not properly closed with a \">\" at the end such as `<input>` instead of `<input>`.\n2. Check if all elements with ids have unique IDs. Look for any elements that have the same id attributes.\nLet's start by checking these steps in the provided HTML code."
            }
        ]
    }
]