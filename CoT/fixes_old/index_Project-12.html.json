[
    {
        "guideline": "1.1.1",
        "success_criteria": "alt attribute is missing in iframe or img tag",
        "error_example": "<img src=\"logo.png\">",
        "fixed_example": "<img src=\"logo.png\" alt=\"Beauty Products Logo\">",
        "error_fixes": [
            {
                "problem_type": "alt attribute is missing in img tag",
                "offending_line": "<img src='product1.jpg'>",
                "fixed_line": "<img src='product1.jpg' alt='Product 1'>",
                "CoT": "To find the issue where the `alt` attribute is missing in `img` tags, we can follow these steps:\n\n1. Identify all the `img` tags in the HTML code.\n2. Check if each `img` tag has the `alt` attribute.\n3. If any `img` tag is missing the `alt` attribute, it needs to be added for accessibility purposes.\n\nLet's go through the code and identify the `img` tags without the `alt` attribute."
            }
        ]
    },
    {
        "guideline": "1.3.1",
        "success_criteria": "input element or button is missing an associated label, it contains an alt attribute, or its label is empty",
        "error_example": "<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "fixed_example": "<label for=\"myfile\">I have a file</label><br>\n<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "error_fixes": [
            {
                "problem_type": "Input element is missing an associated label",
                "offending_line": "<input type=\"text\" id=\"name\" name=\"name\" alt=\"name\" placeholder=\"Your Name\">",
                "fixed_line": "<label for=\"name\">Your Name:</label><input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Your Name\">",
                "CoT": "1. Look for input elements and buttons in the html code.\n2. Check if each input element or button has an associated label using the \"for\" attribute.\n3. Check if the input element has an \"alt\" attribute. If it does, make sure it is not used as a substitute for a label.\n4. Check if the label associated with the input element or button is empty. A label should have text content to describe the purpose of the input element or button."
            }
        ]
    },
    {
        "guideline": "1.4.2",
        "success_criteria": "Audio or video element should avoid automatically playing audio ",
        "error_example": "<source src=\"bookstore-video.mp4\" type=\"video/mp4\" />",
        "fixed_example": "<video controls>\n<source src=\"bookstore-video.mp4\" type=\"video/mp4\">\nYour browser does not support the video tag.\n</video>",
        "error_fixes": [
            {
                "problem_type": "Audio or video element should avoid automatically playing audio",
                "offending_line": "<audio controls autoplay><source src=\"audio.mp3\" type=\"audio/mpeg\"></audio>",
                "fixed_line": "<audio controls><source src=\"audio.mp3\" type=\"audio/mpeg\"></audio>",
                "CoT": "1. Look for any `<audio>` or `<video>` elements in the HTML code.\n2. Check if there are any attributes such as `autoplay` that would cause the media to play automatically.\n3. Ensure that any autoplay feature is user-initiated or controlled to comply with accessibility guidelines."
            }
        ]
    },
    {
        "guideline": "1.4.4",
        "success_criteria": "<b> <i> or <font> tag should not be used",
        "error_example": "<font size=\"5\">Description of the book...</font>",
        "fixed_example": "<p>Description of the book...</p>",
        "error_fixes": [
            {
                "problem_type": "Use of <b> tag",
                "offending_line": "<b>Welcome to our Electronics Store</b>",
                "fixed_line": "<h1>Welcome to our Electronics Store</h1>",
                "CoT": "Step 1: Look through the HTML code to identify any <b>, <i>, or <font> tags being used.\n\nStep 2: Check each occurrence of these tags to see if they are being used for styling purposes.\n\nStep 3: If any <b>, <i>, or <font> tags are found to be used for styling, they should be replaced with CSS styling instead.\n\nLet's go through the HTML code to find any <b>, <i>, or <font> tags and determine if they are being used for styling."
            }
        ]
    },
    {
        "guideline": "2.1.1",
        "success_criteria": "onmousedown event missing onkeydown event or script is not keyboard accessible",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Missing onkeydown event on interactive element",
                "offending_line": "<a href=\"#products\" class=\"btn\">Explore Products</a>",
                "fixed_line": "<a href=\"#products\" class=\"btn\" onkeydown=\"if (event.key === 'Enter') { location.href='#products'; }\">Explore Products</a>",
                "CoT": "Sure! To identify the accessibility issue related to missing `onmousedown` event or `onkeydown` event, we need to look for interactive elements that are not keyboard accessible, meaning users cannot interact with them using only the keyboard.\n\n1. Identify interactive elements:\n   - Look for elements that users typically interact with, such as buttons or links.\n\n2. Check for event handlers:\n   - Look for event attributes like `onclick`, `onmousedown`, `onkeydown`, etc., that indicate interactivity.\n\n3. Verify keyboard accessibility:\n   - Focus on each interactive element using the Tab key to navigate through the page.\n   - Ensure that you can see a focus indicator (usually a visible outline) around the element when it is focused.\n   - Test if you can interact with the element using the Enter key or Spacebar key.\n\nLet's go through the HTML code provided to find any elements that might have this accessibility issue."
            }
        ]
    },
    {
        "guideline": "2.2.1",
        "success_criteria": "meta refresh with a time-out is used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": []
    },
    {
        "guideline": "2.2.2",
        "success_criteria": "<marquee> element should not be used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Marquee element used",
                "offending_line": "<marquee>Welcome to our Electronics Store</marquee>",
                "fixed_line": "<h1>Welcome to our Electronics Store</h1>",
                "CoT": "Step 1: Identify if there is any <marquee> element used in the HTML code.\nStep 2: If <marquee> element is found, determine where it is used and what content is enclosed within it.\nStep 3: Explain why the <marquee> element should not be used for accessibility reasons.\nStep 4: Provide a solution or alternative approach to achieve the desired effect without using the <marquee> element."
            }
        ]
    },
    {
        "guideline": "2.4.2",
        "success_criteria": "title element is empty",
        "error_example": "<title></title>",
        "fixed_example": "<title>Beauty Products Store</title>",
        "error_fixes": [
            {
                "problem_type": "Empty <title> element",
                "offending_line": "<title>Electronic Items</title>",
                "fixed_line": "<title>Electronic Items - Electronics Store</title>",
                "CoT": "Sure! Let's tackle the issue of the empty `<title>` element step by step:\n\n1. The `<title>` element is located within the `<head>` section of the HTML document. It is essential for providing a title for the webpage that is displayed in the browser tab and is often used by screen readers to announce the page title to visually impaired users.\n  \nAs per the given problem description, the `<title>` element is empty, which can make it difficult for users relying on screen readers to understand the purpose or content of the page.\n\nI'll provide you with the fixed code shortly."
            }
        ]
    },
    {
        "guideline": "2.4.4",
        "success_criteria": "anchor element contains no text",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "anchor element contains no text",
                "offending_line": "<a href=\"#\" class=\"btn\">Buy Now</a>",
                "fixed_line": "<a href=\"#\" class=\"btn\">Buy Now <span class=\"sr-only\">Product 1</span></a>",
                "CoT": "Let's start by looking at all the anchor elements in the HTML and checking if any of them do not have any text content within them. This can be a potential accessibility issue as screen readers rely on text content within anchor elements to inform users about the purpose of the link."
            }
        ]
    },
    {
        "guideline": "3.1.1",
        "success_criteria": "document language not identified or incorrect",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": []
    },
    {
        "guideline": "3.3.2",
        "success_criteria": "input element has more than one associated label",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Input element has more than one associated label",
                "offending_line": "<label for=\"name\">Your Name:</label>",
                "fixed_line": "<label for=\"name\">Your Name:</label><input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Your Name\">",
                "CoT": "To find the accessibility-related issue of an input element having more than one associated label, we need to:\n\n1. Identify all input elements in the HTML.\n2. Check the associated label(s) for each input element.\n3. Ensure that each input element has only one associated label for proper accessibility.\n4. If any input element has more than one associated label, it needs to be corrected.\n\nLet's start by looking through the HTML code provided and checking the association of labels with input elements."
            }
        ]
    },
    {
        "guideline": "4.1.1",
        "success_criteria": "element does not have complete start and end tags or id attribute is not unique",
        "error_example": "<li><a href=\"#\">Services</li>",
        "fixed_example": "<li><a href=\"#\">Services</a></li>",
        "error_fixes": [
            {
                "problem_type": "Incomplete start tag",
                "offending_line": "<label for=\"message\"></label>",
                "fixed_line": "<label for=\"message\">Your Message:</label>",
                "CoT": "Sure, let's start by analyzing the HTML code provided step by step to identify any accessibility issues related to incomplete start and end tags or non-unique id attributes.\nLet's first look for incomplete start and end tags:\n1. Check if all elements have complete start and end tags. This means every HTML element must have both opening and closing tags, except for self-closing tags like `<img>`, `<input>`, etc.\n2. Look for any missing closing tags for elements such as `<input>`, `<textarea>`, `<p>`, `<h1>`, `<h2>`, `<h3>`, `<li>`, `<ul>`, `<nav>`, `<form>`. Make sure each opening tag has a corresponding closing tag.\n\nNow, let's move on to checking if id attributes are unique:\n1. Identify all elements that have an id attribute set.\n2. Verify that each id attribute is unique within the entire HTML document. No two elements should have the same id value.\n\nLet's go through the HTML code to find any accessibility issues related to the mentioned problems."
            }
        ]
    }
]