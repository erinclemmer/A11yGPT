[
    {
        "guideline": "1.1.1",
        "success_criteria": "alt attribute is missing in iframe or img tag",
        "error_example": "<img src=\"logo.png\">",
        "fixed_example": "<img src=\"logo.png\" alt=\"Beauty Products Logo\">",
        "error_fixes": [
            {
                "problem_type": "alt attribute is missing in img tag",
                "offending_line": "<img src=\"butter_chicken.jpg\" alt=\"Butter Chicken\">",
                "fixed_line": "<img src=\"butter_chicken.jpg\" alt=\"Butter Chicken - Delicious butter chicken dish\">",
                "CoT": "First, we need to identify all the `<img>` tags in the HTML code. Then, we will check each `<img>` tag to see if it has an `alt` attribute. If any `<img>` tag is missing the `alt` attribute, we will mark it as an accessibility issue. Let's proceed with this approach."
            }
        ]
    },
    {
        "guideline": "1.3.1",
        "success_criteria": "input element or button is missing an associated label, it contains an alt attribute, or its label is empty",
        "error_example": "<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "fixed_example": "<label for=\"myfile\">I have a file</label><br>\n<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "error_fixes": [
            {
                "problem_type": "input element or button is missing an associated label, it contains an alt attribute, or its label is empty",
                "offending_line": "<label for=\"sort\"></label>",
                "fixed_line": "<label for=\"sort\">Sort by: </label>",
                "CoT": "Sure, let's go step by step to find the accessibility issue of \"input element or button is missing an associated label, it contains an alt attribute, or its label is empty.\"\n\n1. Look for input elements or buttons in the HTML code.\n2. Check if each input element or button has an associated label using the \"label\" element with the \"for\" attribute.\n3. Make sure that if an input element has an \"alt\" attribute, it is only used for images and not for input elements.\n4. Verify that the labels associated with input elements or buttons are not empty.\n\nLet's start by looking for input elements and buttons in the code. We will then check if they have associated labels."
            }
        ]
    },
    {
        "guideline": "1.4.2",
        "success_criteria": "Audio or video element should avoid automatically playing audio ",
        "error_example": "<source src=\"bookstore-video.mp4\" type=\"video/mp4\" />",
        "fixed_example": "<video controls>\n<source src=\"bookstore-video.mp4\" type=\"video/mp4\">\nYour browser does not support the video tag.\n</video>",
        "error_fixes": [
            {
                "problem_type": "Audio or video element should avoid automatically playing audio",
                "offending_line": "<video src='video.mp4' autoplay muted></video>",
                "fixed_line": "<video src='video.mp4' muted></video>",
                "CoT": "Certainly! To find the issue of audio or video elements automatically playing audio, we need to do the following steps:\n\n1. Identify if there are any audio or video elements present in the HTML.\n2. Check if these audio or video elements have any `autoplay` attribute set.\n3. If an element has the `autoplay` attribute set, it means it will automatically start playing audio or video when the page loads, which can be disruptive for some users.\n4. If an element has the `autoplay` attribute set, it should be removed or disabled to comply with accessibility guidelines.\n\nLet's go through the HTML provided and look for any audio or video elements that may have the `autoplay` attribute set."
            }
        ]
    },
    {
        "guideline": "1.4.4",
        "success_criteria": "<b> <i> or <font> tag should not be used",
        "error_example": "<font size=\"5\">Description of the book...</font>",
        "fixed_example": "<p>Description of the book...</p>",
        "error_fixes": [
            {
                "problem_type": "Use of <marquee> tag for scrolling text",
                "offending_line": "<marquee>Welcome to our Indian Cuisine Restaurant</marquee>",
                "fixed_line": "<h1>Welcome to our Indian Cuisine Restaurant</h1>",
                "CoT": "Sure, I will look for instances of <b>, <i>, or <font> tags in the html code provided. I will check if any of these tags are used and then identify where they are being used inappropriately. Let me go through the html code now."
            }
        ]
    },
    {
        "guideline": "2.1.1",
        "success_criteria": "onmousedown event missing onkeydown event or script is not keyboard accessible",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "onmousedown event missing onkeydown event",
                "offending_line": "<button>Add to Cart</button>",
                "fixed_line": "<button onclick=\"addToCart()\" onkeydown=\"addToCart()\">Add to Cart</button>",
                "CoT": "Step 1: Identify interactive elements such as buttons, links, form controls.\nStep 2: Check if any of these interactive elements have event handlers only for mouse interactions (like onclick) but are missing equivalent event handlers for keyboard interactions (like onkeydown).\nStep 3: Look for areas where scripts or behaviors are triggered by mouse events (like onmousedown) but are not accessible via keyboard.\nStep 4: Ensure that all interactive elements and scripts can be operated using a keyboard or screen reader.\nLet me go through the HTML to find any missing keyboard accessibility for the interactive elements."
            }
        ]
    },
    {
        "guideline": "2.2.1",
        "success_criteria": "meta refresh with a time-out is used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": []
    },
    {
        "guideline": "2.2.2",
        "success_criteria": "<marquee> element should not be used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Use of <marquee> element",
                "offending_line": "<marquee>Welcome to our Indian Cuisine Restaurant</marquee>",
                "fixed_line": "<h1>Welcome to our Indian Cuisine Restaurant</h1>",
                "CoT": "1. Identify the <marquee> element in the HTML code. It is located in the <header> section.\n2. The <marquee> element is an old HTML tag that is not supported in modern HTML standards and is not accessible for all users.\n3. Replacing the <marquee> element with a CSS animation or a JavaScript animation would be a more accessible and modern approach to achieve similar effects.\n4. By removing the <marquee> element and using alternative methods for animation, we can improve accessibility and ensure a better user experience for all visitors."
            }
        ]
    },
    {
        "guideline": "2.4.2",
        "success_criteria": "title element is empty",
        "error_example": "<title></title>",
        "fixed_example": "<title>Beauty Products Store</title>",
        "error_fixes": [
            {
                "problem_type": "title element is empty",
                "offending_line": "<title>Indian Cuisine Restaurant</title>",
                "fixed_line": "<title>Indian Cuisine Restaurant</title>",
                "CoT": "Sure! To find and address the accessability issue of an empty title element, we need to:\n\n1. Locate the title element in the HTML code.\n2. Check if the title element is not empty.\n\nLet's start by locating the title element in the HTML code."
            }
        ]
    },
    {
        "guideline": "2.4.4",
        "success_criteria": "anchor element contains no text",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "anchor element contains no text",
                "offending_line": "<li><a href=\"#home\">Home</a></li>",
                "fixed_line": "<li><a href=\"#home\">Home</a> <span class=\"sr-only\">link to Home</span></li>",
                "CoT": "Step 1: Identify all anchor elements in the HTML code\nStep 2: Check if each anchor element has text content inside it\nStep 3: Note any anchor elements that do not have text content\nStep 4: Confirm that the anchor elements without text content are related to the navigation or have important links\nStep 5: Provide the necessary fix for the anchor elements without text content"
            }
        ]
    },
    {
        "guideline": "3.1.1",
        "success_criteria": "document language not identified or incorrect",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "document language not identified or incorrect",
                "offending_line": "<html lang=\"en\">",
                "fixed_line": "<html lang=\"en\" lang=\"en\">",
                "CoT": "To address the issue of document language not being identified or incorrectly identified, we need to ensure that the language attribute is set properly in the `<html>` tag. This is important for screen readers and other assistive technologies to understand the language of the content on the webpage.\n\nLet's go through the steps to check and correct this issue:\n\n1. Look for the `<html>` tag in the HTML document.\n2. Check if the `lang` attribute is present in the `<html>` tag.\n3. Verify if the value of the `lang` attribute reflects the correct language used in the document (in this case, English).\n4. If the `lang` attribute is missing or the language is incorrect, update it to reflect the appropriate language.\n\nLet's go ahead and check the `<html>` tag in the provided HTML document to see if the language is correctly identified."
            }
        ]
    },
    {
        "guideline": "3.3.2",
        "success_criteria": "input element has more than one associated label",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "input element has more than one associated label",
                "offending_line": "<label for=\"vehicle1\">",
                "fixed_line": "<label for=\"vehicle1\"> I have a bike</label><br>",
                "CoT": "1. Identify all the input elements in the HTML code.\n\n2. Check if each input element has more than one associated label.\n\n3. If an input element has more than one associated label, flag it as an accessibility issue regarding multiple associated labels for a single input element."
            }
        ]
    },
    {
        "guideline": "4.1.1",
        "success_criteria": "element does not have complete start and end tags or id attribute is not unique",
        "error_example": "<li><a href=\"#\">Services</li>",
        "fixed_example": "<li><a href=\"#\">Services</a></li>",
        "error_fixes": [
            {
                "problem_type": "element does not have complete start and end tags",
                "offending_line": "<label for=\"sort\"></label>",
                "fixed_line": "<label for=\"sort\">Sort by:</label>",
                "CoT": "Sure, let's start by identifying elements that do not have complete start and end tags. This typically means checking if each HTML tag that requires an end tag has one. Let's start looking through the code for any missing end tags."
            }
        ]
    }
]