[
    {
        "guideline": "1.1.1",
        "success_criteria": "alt attribute is missing in iframe or img tag",
        "error_example": "<img src=\"logo.png\">",
        "fixed_example": "<img src=\"logo.png\" alt=\"Beauty Products Logo\">",
        "error_fixes": [
            {
                "problem_type": "alt attribute is missing in img tag",
                "offending_line": "<img src=\"chicken_biryani.jpg\" alt=\"Chicken Biryani\">",
                "fixed_line": "<img src=\"chicken_biryani.jpg\" alt=\"Image of Chicken Biryani\">",
                "CoT": "Sure! Here's the step-by-step approach to finding the accessibility issue of missing `alt` attributes in `img` tags:\n\n1. Identify the elements that are images (`img` tags) on the page. In this case, we have three images in the `<div class=\"menu\">` section.\n\n2. Check if each `img` tag has an `alt` attribute specified. The `alt` attribute provides alternative text for an image, which is important for accessibility purposes.\n\n3. If any of the `img` tags don't have an `alt` attribute, you have found the accessibility issue related to missing `alt` attributes.\n\n4. To fix the issue, you need to add appropriate `alt` text to the `img` tags to describe the content or purpose of the images for users who may not be able to see them.\n\nLet's go through the HTML code provided and specifically check for missing `alt` attributes in the `img` tags."
            }
        ]
    },
    {
        "guideline": "1.3.1",
        "success_criteria": "input element or button is missing an associated label, it contains an alt attribute, or its label is empty",
        "error_example": "<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "fixed_example": "<label for=\"myfile\">I have a file</label><br>\n<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "error_fixes": [
            {
                "problem_type": "Input element or button is missing an associated label",
                "offending_line": "<input type=\"file\" id=\"myfile\" name=\"myfile\">",
                "fixed_line": "<label for=\"myfile\">Select a file:</label>\n<input type=\"file\" id=\"myfile\" name=\"myfile\">",
                "CoT": "Sure, let's break it down step by step to identify the accessibility issues related to the input elements and buttons in the HTML code provided:\n\n1. Look for input elements and buttons throughout the code.\n2. Check if each input element and button has an associated label using the \"for\" attribute.\n3. Verify if each input element and button has appropriate text content within the label or the button itself.\n4. Ensure that any input element or button with an \"alt\" attribute also has a proper label.\n\nLet's start by examining the code to find input elements and buttons without associated labels or with empty labels."
            }
        ]
    },
    {
        "guideline": "1.4.2",
        "success_criteria": "Audio or video element should avoid automatically playing audio ",
        "error_example": "<source src=\"bookstore-video.mp4\" type=\"video/mp4\" />",
        "fixed_example": "<video controls>\n<source src=\"bookstore-video.mp4\" type=\"video/mp4\">\nYour browser does not support the video tag.\n</video>",
        "error_fixes": [
            {
                "problem_type": "Audio or video element should avoid automatically playing audio",
                "offending_line": "",
                "fixed_line": "",
                "CoT": "First Step: Identify any audio or video elements on the page.\nLet's check the HTML code for any `<audio>` or `<video>` elements."
            }
        ]
    },
    {
        "guideline": "1.4.4",
        "success_criteria": "<b> <i> or <font> tag should not be used",
        "error_example": "<font size=\"5\">Description of the book...</font>",
        "fixed_example": "<p>Description of the book...</p>",
        "error_fixes": [
            {
                "problem_type": "Use of <marquee> tag for scrolling text",
                "offending_line": "<marquee>Welcome to our Indian Cuisine Restaurant</marquee>",
                "fixed_line": "<h1>Welcome to our Indian Cuisine Restaurant</h1>",
                "CoT": "Step 1: Identify any <b>, <i>, or <font> tags used in the HTML code.\nStep 2: Determine if any of these tags are being used for styling purposes.\nStep 3: Check if any of these tags can be replaced with semantic HTML tags to improve accessibility.\nStep 4: Provide the necessary changes to replace the <b>, <i>, or <font> tags with appropriate semantic HTML tags if needed."
            }
        ]
    },
    {
        "guideline": "2.1.1",
        "success_criteria": "onmousedown event missing onkeydown event or script is not keyboard accessible",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "onmousedown event missing onkeydown event or script is not keyboard accessible",
                "offending_line": "<button>Add to Cart</button>",
                "fixed_line": "<button>Add to Cart</button> <div tabindex='0' onkeydown='if(event.key === \"Enter\"){ /* Add appropriate function here */ }'></div>",
                "CoT": "Sure, to find the issue related to the missing `onkeydown` event or lack of keyboard accessibility, I will need to go through the HTML and look for any interactive elements such as buttons, links, form controls, or any scripted functionalities that require user interaction.\n\nI will specifically check if there are any event handlers like `onmousedown` but not `onkeydown` for keyboard users. This is important for making the website accessible to users who rely on keyboard navigation instead of a mouse.\n\nI will also look for any JavaScript functions that are triggered by mouse events but do not have equivalent keyboard triggers for users who navigate using a keyboard.\n\nLet me go through the HTML code to identify any elements or scripts that might be missing keyboard accessibility features."
            }
        ]
    },
    {
        "guideline": "2.2.1",
        "success_criteria": "meta refresh with a time-out is used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": []
    },
    {
        "guideline": "2.2.2",
        "success_criteria": "<marquee> element should not be used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Use of <marquee> element",
                "offending_line": "<marquee>Welcome to our Indian Cuisine Restaurant</marquee>",
                "fixed_line": "<h1>Welcome to our Indian Cuisine Restaurant</h1>",
                "CoT": "Step 1: Identify the <marquee> element in the HTML code provided.\n\nStep 2: Evaluate the use of the <marquee> element based on the given problem statement, which states that the <marquee> element should not be used.\n\nStep 3: Determine an alternative approach or solution to replace the <marquee> element with a more accessible and modern alternative, such as using CSS animations or javascript for similar effects.\n\nStep 4: Provide a revised version of the HTML code with the <marquee> element removed and the suggested alternative implemented."
            }
        ]
    },
    {
        "guideline": "2.4.2",
        "success_criteria": "title element is empty",
        "error_example": "<title></title>",
        "fixed_example": "<title>Beauty Products Store</title>",
        "error_fixes": [
            {
                "problem_type": "title element is empty",
                "offending_line": "<title>Indian Cuisine Restaurant</title>",
                "fixed_line": "<title>Indian Cuisine Restaurant - Home</title>",
                "CoT": "Let's start by checking the `<title>` element in the HTML code to see if it's empty or missing a meaningful title. The `<title>` element is important for accessibility as it provides descriptive information about the webpage."
            }
        ]
    },
    {
        "guideline": "2.4.4",
        "success_criteria": "anchor element contains no text",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "anchor element contains no text",
                "offending_line": "<a href=\"#home\"></a>",
                "fixed_line": "<a href=\"#home\">Home</a>",
                "CoT": "Sure! \n\nStep 1: Identify all the anchor elements on the page.\nStep 2: Check each anchor element to see if it contains any text.\nStep 3: If an anchor element does not contain any text, this would be the accessibility issue of \"anchor element contains no text\"."
            }
        ]
    },
    {
        "guideline": "3.1.1",
        "success_criteria": "document language not identified or incorrect",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "document language not identified or incorrect",
                "offending_line": "<html lang='en'>",
                "fixed_line": "<html lang='en' xmlns='http://www.w3.org/1999/xhtml'>",
                "CoT": "Step 1: Check if the language attribute is specified correctly in the html tag.\nStep 2: Look for any instances where the language may need to be identified, such as in text content or form field labels."
            }
        ]
    },
    {
        "guideline": "3.3.2",
        "success_criteria": "input element has more than one associated label",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Input element has more than one associated label",
                "offending_line": "<input type=\"text\" id=\"username\" name=\"username\"><br>",
                "fixed_line": "<label for=\"username\">Username:</label><br><input type=\"text\" id=\"username\" name=\"username\"><br>",
                "CoT": "To find the issue where an input element has more than one associated label, we need to:\n1. Identify all the input elements in the HTML.\n2. Identify all the label elements in the HTML.\n3. Check if any input element has more than one label associated with it.\n\nLet's start by identifying the input and label elements in the provided HTML code."
            }
        ]
    },
    {
        "guideline": "4.1.1",
        "success_criteria": "element does not have complete start and end tags or id attribute is not unique",
        "error_example": "<li><a href=\"#\">Services</li>",
        "fixed_example": "<li><a href=\"#\">Services</a></li>",
        "error_fixes": [
            {
                "problem_type": "Element does not have complete start and end tags",
                "offending_line": "<label for=\"sort\"></label>",
                "fixed_line": "<label for=\"sort\">Sort by:</label>",
                "CoT": "Sure! Let's start by looking for elements that do not have complete start and end tags. We will also check if the id attribute is unique throughout the document. I will carefully examine each element in the HTML code. Let's begin: \n\n1. The `<label>` element with `for=\"sort\"` is missing any inner text. It should have a meaningful label text to describe the sorting filter. \n\n2. The `<label>` element for the file input `<input type=\"file\" id=\"myfile\" name=\"myfile\">` is missing the inner text that serves as a label for the file input field.\n\n3. The `<input>` elements with type radio have the same id attribute values \"1\", \"2\", and \"3\". The id attribute should be unique for each element.\n\n4. The `<input>` elements with type checkbox do not have their corresponding `<label>` elements wrapped with the `for` attribute. This can make it difficult for screen readers to associate the labels with the checkboxes.\n\n5. The `<marquee>` element is a non-standard HTML element that may not be accessible to all users. It would be better to use CSS animations or JavaScript for similar effects.\n\nThis concludes the examination for elements with incomplete start and end tags or non-unique id attributes."
            }
        ]
    }
]