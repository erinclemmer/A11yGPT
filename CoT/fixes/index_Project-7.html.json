[
    {
        "guideline": "1.1.1",
        "success_criteria": "alt attribute is missing in iframe or img tag",
        "error_example": "<img src=\"logo.png\">",
        "fixed_example": "<img src=\"logo.png\" alt=\"Beauty Products Logo\">",
        "error_fixes": [
            {
                "problem_type": "alt attribute is missing in iframe tag",
                "offending_line": "<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/your-exercise-video\" frameborder=\"0\" allowfullscreen></iframe>",
                "fixed_line": "<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/your-exercise-video\" frameborder=\"0\" allowfullscreen alt=\"Exercise Video\"></iframe>",
                "CoT": "To find the issue related to the missing `alt` attribute in the `iframe` or `img` tag, we need to:\n1. Check all `img` tags in the HTML code to ensure they have the `alt` attribute.\n2. Check the `iframe` tag to see if it has the `alt` attribute.\n3. If any of these tags are missing the `alt` attribute, we need to add it with appropriate descriptive text.\n\nLet's go through the HTML code provided and identify if there are any missing `alt` attributes."
            }
        ]
    },
    {
        "guideline": "1.3.1",
        "success_criteria": "input element or button is missing an associated label, it contains an alt attribute, or its label is empty",
        "error_example": "<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "fixed_example": "<label for=\"myfile\">I have a file</label><br>\n<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "error_fixes": [
            {
                "problem_type": "Input element missing associated label",
                "offending_line": "<input type=\"text\" id=\"name\" name=\"name\" required><br>",
                "fixed_line": "<label for=\"name\">Name:</label><br><input type=\"text\" id=\"name\" name=\"name\" required><br>",
                "CoT": "Step 1: Identify all input elements and buttons in the form within the section of the page.\nStep 2: Check if each input element and button has an associated label.\nStep 3: Determine if the label is missing, empty, or if it properly associates with the input element or button.\nStep 4: Identify any input element or button that is missing an associated label, has an empty label, or has a label that doesn't effectively describe the purpose of the input element or button."
            }
        ]
    },
    {
        "guideline": "1.4.2",
        "success_criteria": "Audio or video element should avoid automatically playing audio ",
        "error_example": "<source src=\"bookstore-video.mp4\" type=\"video/mp4\" />",
        "fixed_example": "<video controls>\n<source src=\"bookstore-video.mp4\" type=\"video/mp4\">\nYour browser does not support the video tag.\n</video>",
        "error_fixes": [
            {
                "problem_type": "Audio or video element should avoid automatically playing audio",
                "offending_line": "<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/your-exercise-video\" frameborder=\"0\" allowfullscreen></iframe>",
                "fixed_line": "<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/your-exercise-video\" frameborder=\"0\" allowfullscreen allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "CoT": "1. Look for any audio or video elements in the HTML.\n2. Check if they have any attributes that automatically start playing audio or video, such as autoplay attribute or JavaScript functions that trigger audio playback.\n3. If any audio or video element has autoplay enabled, consider adding controls to let users start and stop the audio or video manually instead."
            }
        ]
    },
    {
        "guideline": "1.4.4",
        "success_criteria": "<b> <i> or <font> tag should not be used",
        "error_example": "<font size=\"5\">Description of the book...</font>",
        "fixed_example": "<p>Description of the book...</p>",
        "error_fixes": [
            {
                "problem_type": "Use of <b> tag for styling",
                "offending_line": "<h2 onmouseout=\"PauseVideo()\">Exercise Videos</h2>",
                "fixed_line": "<h2 style=\"font-weight: bold;\" onmouseout=\"PauseVideo()\">Exercise Videos</h2>",
                "CoT": "1. Look through the entire HTML code for any instances of `<b>`, `<i>`, or `<font>` tags.\n2. Determine if any of these tags are being used for styling purposes.\n3. If any of these tags are found being used for styling, identify the specific element that they are applied to.\n4. Provide the specific tag and element where the issue occurs."
            }
        ]
    },
    {
        "guideline": "2.1.1",
        "success_criteria": "onmousedown event missing onkeydown event or script is not keyboard accessible",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "onmousedown event missing onkeydown event or script is not keyboard accessible",
                "offending_line": "<h2 onmouseout=\"PauseVideo()\">Exercise Videos</h2>",
                "fixed_line": "<h2 onmousedown=\"PauseVideo\" onkeydown=\"if (event.keyCode === 13 || event.keyCode === 32) { PauseVideo() }\" tabindex=\"0\">Exercise Videos</h2>",
                "CoT": "First, let's identify any elements that require user interaction, such as buttons or form fields. Then, we'll specifically look for those that have event handlers like `onmousedown` but do not have equivalent keyboard event handlers like `onkeydown`. Let's search for these instances in the HTML code provided."
            }
        ]
    },
    {
        "guideline": "2.2.1",
        "success_criteria": "meta refresh with a time-out is used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": []
    },
    {
        "guideline": "2.2.2",
        "success_criteria": "<marquee> element should not be used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Marquee element should not be used",
                "offending_line": "<marquee></marquee>",
                "fixed_line": "<div style=\"overflow: hidden;\">Content here</div>",
                "CoT": "Step 1: Identify if there is any <marquee> element used in the HTML code.\n\nStep 2: If <marquee> element is found, determine where it is used and what content it contains.\n\nStep 3: If the <marquee> element is used, suggest an alternative method to achieve the same effect without using the <marquee> element, as it is not considered best practice for accessibility."
            }
        ]
    },
    {
        "guideline": "2.4.2",
        "success_criteria": "title element is empty",
        "error_example": "<title></title>",
        "fixed_example": "<title>Beauty Products Store</title>",
        "error_fixes": [
            {
                "problem_type": "Empty title element",
                "offending_line": "<title>Fitness Tracker</title>",
                "fixed_line": "<title>Fitness Tracker - Your Ultimate Fitness Companion</title>",
                "CoT": "Sure! To address the issue of the empty title element, we need to first locate the <title> tag in the HTML code. The <title> tag is usually found within the <head> section of the HTML document and is used to provide a title for the webpage.\n\nNext, we need to ensure that the <title> element is not empty. An empty <title> element can cause issues for users who rely on screen readers or other assistive technologies to understand the content of a webpage.\n\nWe should check the content inside the <title> tags and ensure it provides a clear and descriptive title for the webpage.\n\nLet's check the HTML code given for the presence of the <title> element and its content."
            }
        ]
    },
    {
        "guideline": "2.4.4",
        "success_criteria": "anchor element contains no text",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "anchor element contains no text",
                "offending_line": "<a href=\"#\">Home</a>",
                "fixed_line": "<a href=\"#\">Home</a>",
                "CoT": "To find the issue where an anchor element contains no text, we need to identify all the anchor elements in the HTML code and check if they have any text content within them. If an anchor element has no text content, then we would need to add text content within the anchor element to make it accessible.\nWe will look for anchor elements represented by the <a> tag in the HTML code and verify if they have any text content between the opening and closing tags."
            }
        ]
    },
    {
        "guideline": "3.1.1",
        "success_criteria": "document language not identified or incorrect",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Document language not identified",
                "offending_line": "<html lang=\"en\">",
                "fixed_line": "<html lang=\"en\" xml:lang=\"en\">",
                "CoT": "Sure! To address the problem of document language not identified or incorrect, we need to ensure that the language of the document is properly specified in the HTML. This is done using the \"lang\" attribute in the opening <html> tag.\n\nLet's check the given HTML code to see if the document language is properly identified."
            }
        ]
    },
    {
        "guideline": "3.3.2",
        "success_criteria": "input element has more than one associated label",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "input element has more than one associated label",
                "offending_line": "<label for=\"email\">Email:</label>\n<label for=\"email\">Email:</label>",
                "fixed_line": "<label for=\"email\">Email:</label>",
                "CoT": "Sure! To find the accessibility issue of having more than one label associated with an input element, we need to look for instances where an input element has more than one `label` elements associated with it. This can cause confusion for screen readers and other assistive technologies.\n\nLet's search through the HTML code to identify any input elements with multiple associated `label` elements."
            }
        ]
    },
    {
        "guideline": "4.1.1",
        "success_criteria": "element does not have complete start and end tags or id attribute is not unique",
        "error_example": "<li><a href=\"#\">Services</li>",
        "fixed_example": "<li><a href=\"#\">Services</a></li>",
        "error_fixes": [
            {
                "problem_type": "element does not have complete start and end tags",
                "offending_line": "<button type=\"submit\" style=\"color: rgb(0, 0, 0); background-color: rgb(76, 175, 80);\"></button>",
                "fixed_line": "<button type=\"submit\" style=\"color: rgb(0, 0, 0); background-color: rgb(76, 175, 80);\">Submit</button>",
                "CoT": "First, let's identify elements that do not have complete start and end tags. We need to make sure that all elements have both opening and closing tags for proper accessibility. Let's check the code for any missing start or end tags."
            }
        ]
    }
]