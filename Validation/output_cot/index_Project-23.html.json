[
    {
        "guideline": {
            "guideline": "1.3.1",
            "success_criteria": "input element or button is missing an associated label, it contains an alt attribute, or its label is empty",
            "error_example": "<input type=\"file\" id=\"myfile\" name=\"myfile\">",
            "fixed_example": "<label for=\"myfile\">I have a file</label><br>\n<input type=\"file\" id=\"myfile\" name=\"myfile\">"
        },
        "problem": {
            "guideline": "1.3.1",
            "line": 137,
            "problem": "<input type=\"text\" id=\"phone\" name=\"phone\" required>"
        },
        "closest_fix": {
            "problem_type": "input element or button is missing an associated label",
            "offending_line": "<input type=\"text\" alt=\"address\" id=\"address\" name=\"address\" required>",
            "fixed_line": "<label for=\"address\">Address:</label>\n<input type=\"text\" id=\"address\" name=\"address\" required>",
            "CoT": "1. Look for input elements or buttons in the HTML code.\n2. Check if each input element or button has an associated label using the `<label>` tag.\n3. Verify if any input element or button has an alt attribute.\n4. Ensure that the label associated with an input element or button is not empty."
        }
    },
    {
        "guideline": {
            "guideline": "2.4.2",
            "success_criteria": "title element is empty",
            "error_example": "<title></title>",
            "fixed_example": "<title>Beauty Products Store</title>"
        },
        "problem": {
            "guideline": "2.4.2",
            "line": 3,
            "problem": "<head>"
        },
        "closest_fix": {
            "problem_type": "title element is empty",
            "offending_line": "<title></title>",
            "fixed_line": "<title>Food Delivery App</title>",
            "CoT": "Step 1: Identify the `<title>` element in the HTML code. \n\nStep 2: Check if the `<title>` element has any content inside it. \n\nStep 3: Determine if the content inside the `<title>` element is descriptive and informative for users. \n\nStep 4: If the `<title>` element is empty or not descriptive, it would be considered an accessibility issue related to the title element. \n\nLet's go through the HTML code and find the title element."
        }
    },
    {
        "guideline": {
            "guideline": "1.4.4",
            "success_criteria": "<b> <i> or <font> tag should not be used",
            "error_example": "<font size=\"5\">Description of the book...</font>",
            "fixed_example": "<p>Description of the book...</p>"
        },
        "problem": {
            "guideline": "1.4.4",
            "line": 122,
            "problem": "<p><b>Delicious food descriptions go here...</b></p>"
        },
        "closest_fix": {
            "problem_type": "Use of <font> tag",
            "offending_line": "<a href=\"#\" class=\"button\"><font size=\"5\"> View Menu</font></a>",
            "fixed_line": "<a href=\"#\" class=\"button\" style=\"font-size: 1.25em;\"> View Menu</a>",
            "CoT": "Here is the step-by-step approach to finding and fixing <b>, <i>, or <font> tag issues:\n1. Go through the HTML code and look for any <b>, <i>, or <font> tags.\n2. Identify where these tags are being used, and see if they are being used for styling purposes.\n3. Replace <b>, <i>, or <font> tags with appropriate HTML elements or CSS styles for better accessibility and maintainability.\n4. Ensure the content remains styled appropriately after making changes.\n5. Test the website to make sure the changes have not introduced any new styling issues or broken the layout.\n\nLet's start by reviewing the HTML code for any <b>, <i>, or <font> tags."
        }
    },
    {
        "guideline": {
            "guideline": "1.4.4",
            "success_criteria": "<b> <i> or <font> tag should not be used",
            "error_example": "<font size=\"5\">Description of the book...</font>",
            "fixed_example": "<p>Description of the book...</p>"
        },
        "problem": {
            "guideline": "1.4.4",
            "line": 123,
            "problem": "<a href=\"#\" class=\"button\"><font size=\"5\"> View Menu</font></a>"
        },
        "closest_fix": {
            "problem_type": "Use of <font> tag",
            "offending_line": "<a href=\"#\" class=\"button\"><font size=\"5\"> View Menu</font></a>",
            "fixed_line": "<a href=\"#\" class=\"button\" style=\"font-size: 1.25em;\"> View Menu</a>",
            "CoT": "Here is the step-by-step approach to finding and fixing <b>, <i>, or <font> tag issues:\n1. Go through the HTML code and look for any <b>, <i>, or <font> tags.\n2. Identify where these tags are being used, and see if they are being used for styling purposes.\n3. Replace <b>, <i>, or <font> tags with appropriate HTML elements or CSS styles for better accessibility and maintainability.\n4. Ensure the content remains styled appropriately after making changes.\n5. Test the website to make sure the changes have not introduced any new styling issues or broken the layout.\n\nLet's start by reviewing the HTML code for any <b>, <i>, or <font> tags."
        }
    },
    {
        "guideline": {
            "guideline": "2.1.1",
            "success_criteria": "onmousedown event missing onkeydown event or script is not keyboard accessible",
            "error_example": "",
            "fixed_example": ""
        },
        "problem": {
            "guideline": "2.1.1",
            "line": 127,
            "problem": "<h2 onmouseover=\"ToolTip()\">Place Your Order</h2>"
        },
        "closest_fix": {
            "problem_type": "onmousedown event missing onkeydown event or script is not keyboard accessible",
            "offending_line": "<h2 onmouseover=\"ToolTip()\">Place Your Order</h2>",
            "fixed_line": "<h2 onmouseover=\"ToolTip()\" tabindex=\"0\" onkeydown=\"if (event.key === 'Enter') { ToolTip(); }\">Place Your Order</h2>",
            "CoT": "1. Identify any interactive elements on the page that may require keyboard accessibility, such as buttons or form inputs.\n\n2. Check if these elements have appropriate keyboard event handlers, such as onkeydown or onkeyup events, to ensure they are accessible via keyboard navigation.\n\n3. Look for any elements that have specific mouse events, like onmousedown, but don't have corresponding keyboard events.\n\n4. Consider how a user who relies on keyboard navigation would interact with the page and whether any actions or functionalities are only accessible through mouse-based events."
        }
    }
]