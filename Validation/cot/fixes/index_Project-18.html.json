[
    {
        "guideline": "1.1.1",
        "success_criteria": "alt attribute is missing in iframe or img tag",
        "error_example": "<img src=\"logo.png\">",
        "fixed_example": "<img src=\"logo.png\" alt=\"Beauty Products Logo\">",
        "error_fixes": [
            {
                "problem_type": "alt attribute is missing in img tag",
                "offending_line": "<img src=\"background.jpg\">",
                "fixed_line": "<img src=\"background.jpg\" alt=\"Background Image\">",
                "CoT": "First, let's search for `<img>` tags in the HTML code to see if there are any present."
            }
        ]
    },
    {
        "guideline": "1.3.1",
        "success_criteria": "input element or button is missing an associated label, it contains an alt attribute, or its label is empty",
        "error_example": "<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "fixed_example": "<label for=\"myfile\">I have a file</label><br>\n<input type=\"file\" id=\"myfile\" name=\"myfile\">",
        "error_fixes": [
            {
                "problem_type": "input element or button is missing an associated label",
                "offending_line": "<input type=\"text\" id=\"username\" name=\"username\"><br>",
                "fixed_line": "<label for=\"username\">Username:</label><br>\n<input type=\"text\" id=\"username\" name=\"username\"><br>",
                "CoT": "Sure, let's break it down step by step:\n1. Look for all the input elements and buttons in the HTML.\n2. Check if each input element or button has an associated label.\n3. Check if each input element or button has an alt attribute.\n4. Check if each label associated with an input element or button is empty."
            }
        ]
    },
    {
        "guideline": "1.4.2",
        "success_criteria": "Audio or video element should avoid automatically playing audio ",
        "error_example": "<source src=\"bookstore-video.mp4\" type=\"video/mp4\" />",
        "fixed_example": "<video controls>\n<source src=\"bookstore-video.mp4\" type=\"video/mp4\">\nYour browser does not support the video tag.\n</video>",
        "error_fixes": [
            {
                "problem_type": "Audio or video element should avoid automatically playing audio",
                "offending_line": "<video controls>",
                "fixed_line": "<video controls autoplay='false'>",
                "CoT": "First, let's locate the `<video>` element in the HTML code.\n\nNext, we need to check if the `<video>` element includes the `autoplay` attribute which would cause the video to automatically play.\n\nIf the `autoplay` attribute is present, we need to remove it to ensure that the video does not automatically play audio."
            }
        ]
    },
    {
        "guideline": "1.4.4",
        "success_criteria": "<b> <i> or <font> tag should not be used",
        "error_example": "<font size=\"5\">Description of the book...</font>",
        "fixed_example": "<p>Description of the book...</p>",
        "error_fixes": [
            {
                "problem_type": "The <i> tag should not be used for italicizing text",
                "offending_line": "<p><i>Lorem ipsum dolor sit amet, consectetur adipiscing elit. ...</i></p>",
                "fixed_line": "<p style=\"font-style: italic;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. ...</p>",
                "CoT": "1. Look through the HTML code for any instances of the `<i>` tag being used for italicizing text.\n\n2. Look for any instances of the `<b>` tag being used for bold text.\n\n3. Look for any instances of the `<font>` tag being used to change the font size, color, or face.\n\n4. Identify all instances where these tags are used and suggest alternatives to improve accessibility and adhere to modern web standards."
            }
        ]
    },
    {
        "guideline": "2.1.1",
        "success_criteria": "onmousedown event missing onkeydown event or script is not keyboard accessible",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "onmousedown event missing onkeydown event or script is not keyboard accessible",
                "offending_line": "<button onclick=\"playVideo()\" style=\"background-color: #2E7D32; color: #FFFFFF;\"></button>",
                "fixed_line": "<button onclick=\"playVideo()\" onkeydown=\"if(event.key === 'Enter') { playVideo(); }\" style=\"background-color: #2E7D32; color: #FFFFFF;\"></button>",
                "CoT": "Step 1: Identify interactive elements that might need keyboard accessibility. In this case, we have a button that triggers a video to play when clicked. Let's check if the button is keyboard accessible.\n\nStep 2: Check if the button has any keyboard events attached to it. In this case, the button has an onclick event attached to it, which triggers the playVideo() function when clicked. \n\nStep 3: Verify if the functionality triggered by the button is accessible via keyboard. In this case, the playVideo() function should be triggered not only by clicking the button but also by using the keyboard (e.g., hitting Enter when the button is focused). \n\nStep 4: Check if the button can be accessed and triggered using the keyboard only, without relying on mouse interactions. If there is no onkeydown event handling to trigger the playVideo() function when the button is focused and the Enter key is pressed, then an accessibility issue exists.\n\nLet's examine the code to see if the button has keyboard accessibility implemented."
            }
        ]
    },
    {
        "guideline": "2.2.1",
        "success_criteria": "meta refresh with a time-out is used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": []
    },
    {
        "guideline": "2.2.2",
        "success_criteria": "<marquee> element should not be used.",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": []
    },
    {
        "guideline": "2.4.2",
        "success_criteria": "title element is empty",
        "error_example": "<title></title>",
        "fixed_example": "<title>Beauty Products Store</title>",
        "error_fixes": [
            {
                "problem_type": "Title element is empty",
                "offending_line": "<title>Your Bank</title>",
                "fixed_line": "<title>Your Bank - Trusted Financial Partner</title>",
                "CoT": "Sure, let's go through the steps of finding the issues related to the \"title element is empty\":\n\n1. Identify the `<title>` element in the HTML code.\n2. Check the content inside the `<title>` element to ensure it is not empty.\n\nLet's start by looking for the `<title>` element in the provided HTML code."
            }
        ]
    },
    {
        "guideline": "2.4.4",
        "success_criteria": "anchor element contains no text",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Anchor element contains no text",
                "offending_line": "<li><a href=\"#\">Services</li>",
                "fixed_line": "<li><a href=\"#\">Services</a></li>",
                "CoT": "To find the anchor element that contains no text, we need to look for `<a>` tags that do not have any text content within them. The text content should be placed between the opening and closing `<a>` tags. \n\nLet's check each `<a>` tag in the HTML and ensure that it contains text content."
            }
        ]
    },
    {
        "guideline": "3.1.1",
        "success_criteria": "document language not identified or incorrect",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "document language not identified or incorrect",
                "offending_line": "<html lang=\"en\">",
                "fixed_line": "<html lang=\"en\" xml:lang=\"en\">",
                "CoT": "Sure! Let's break it down step by step:\n\n1. Check if the language attribute is set in the opening <html> tag and if it is set to the correct language.\n2. Confirm if the language of the document is identified correctly in the <html> tag."
            }
        ]
    },
    {
        "guideline": "3.3.2",
        "success_criteria": "input element has more than one associated label",
        "error_example": "",
        "fixed_example": "",
        "error_fixes": [
            {
                "problem_type": "Input element has more than one associated label",
                "offending_line": "<label for=\"1\"></label><br>",
                "fixed_line": "<input type=\"radio\" id=\"1\" name=\"fav_number\" value=\"1\"> <label for=\"1\">1</label><br>",
                "CoT": "Sure! Here is how I would go about finding the accessibility issue of an input element having more than one associated label:\n1. Identify all the input elements in the form.\n2. Check each input element to see if it has more than one associated label.\n3. If an input element has multiple labels associated with it, then that would be the accessibility issue to address.\n\nLet's start by identifying all the input elements in the form."
            }
        ]
    },
    {
        "guideline": "4.1.1",
        "success_criteria": "element does not have complete start and end tags or id attribute is not unique",
        "error_example": "<li><a href=\"#\">Services</li>",
        "fixed_example": "<li><a href=\"#\">Services</a></li>",
        "error_fixes": [
            {
                "problem_type": "element does not have complete start and end tags",
                "offending_line": "<li><a href=\"#\">Services</li>",
                "fixed_line": "<li><a href=\"#\">Services</a></li>",
                "CoT": "Sure, let's go step by step:\n\n1. Check if all the elements have complete start and end tags.\n2. Check if all the id attributes are unique."
            }
        ]
    }
]